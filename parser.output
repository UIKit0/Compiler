Terminals unused in grammar

   "."
   T_eof


Rules useless in parser due to conflicts

   87 $@20: /* empty */

  113 $@31: /* empty */


State 86 conflicts: 12 shift/reduce, 2 reduce/reduce
State 87 conflicts: 4 shift/reduce
State 100 conflicts: 13 shift/reduce
State 123 conflicts: 12 shift/reduce
State 124 conflicts: 24 reduce/reduce
State 125 conflicts: 4 shift/reduce, 20 reduce/reduce
State 126 conflicts: 4 shift/reduce, 20 reduce/reduce
State 127 conflicts: 24 reduce/reduce
State 128 conflicts: 13 shift/reduce
State 147 conflicts: 12 shift/reduce, 3 reduce/reduce
State 155 conflicts: 5 shift/reduce
State 157 conflicts: 12 shift/reduce, 1 reduce/reduce
State 163 conflicts: 13 shift/reduce
State 164 conflicts: 13 shift/reduce
State 165 conflicts: 13 shift/reduce
State 166 conflicts: 13 shift/reduce
State 167 conflicts: 13 shift/reduce
State 168 conflicts: 13 shift/reduce
State 173 conflicts: 12 shift/reduce, 2 reduce/reduce
State 178 conflicts: 24 reduce/reduce
State 179 conflicts: 10 shift/reduce, 14 reduce/reduce
State 180 conflicts: 6 shift/reduce, 18 reduce/reduce
State 181 conflicts: 6 shift/reduce, 18 reduce/reduce
State 182 conflicts: 10 shift/reduce, 14 reduce/reduce
State 183 conflicts: 6 shift/reduce, 18 reduce/reduce
State 184 conflicts: 6 shift/reduce, 18 reduce/reduce
State 185 conflicts: 4 shift/reduce, 20 reduce/reduce
State 186 conflicts: 4 shift/reduce, 20 reduce/reduce
State 187 conflicts: 24 reduce/reduce
State 188 conflicts: 24 reduce/reduce
State 189 conflicts: 24 reduce/reduce
State 204 conflicts: 15 reduce/reduce
State 206 conflicts: 5 shift/reduce
State 207 conflicts: 13 shift/reduce
State 222 conflicts: 24 reduce/reduce
State 223 conflicts: 2 shift/reduce, 22 reduce/reduce
State 224 conflicts: 24 reduce/reduce
State 225 conflicts: 2 shift/reduce, 22 reduce/reduce
State 227 conflicts: 12 shift/reduce, 2 reduce/reduce
State 240 conflicts: 13 shift/reduce
State 250 conflicts: 14 shift/reduce
State 258 conflicts: 12 shift/reduce, 2 reduce/reduce
State 272 conflicts: 13 shift/reduce
State 274 conflicts: 14 shift/reduce
State 275 conflicts: 5 shift/reduce
State 277 conflicts: 13 shift/reduce, 1 reduce/reduce
State 292 conflicts: 12 shift/reduce, 1 reduce/reduce
State 296 conflicts: 13 shift/reduce
State 298 conflicts: 12 shift/reduce, 1 reduce/reduce
State 302 conflicts: 12 shift/reduce, 2 reduce/reduce


Grammar

    0 $accept: module $end

    1 $@1: /* empty */

    2 module: $@1 declaration_list

    3 declaration_list: declaration declaration_list
    4                 | /* empty */

    5 declaration: const_def
    6            | var_def
    7            | routine
    8            | program

    9 const_def: "const" type T_id "=" const_expr const_def_list ";"

   10 const_def_list: "," T_id "=" const_expr const_def_list
   11               | /* empty */

   12 $@2: /* empty */

   13 var_def: type T_id $@2 var_def_list ";"

   14 $@3: /* empty */

   15 var_def: type T_id "=" expr $@3 var_def_list ";"

   16 $@4: /* empty */

   17 var_def: type T_id var_init_list $@4 var_def_list ";"

   18 $@5: /* empty */

   19 var_def_list: "," T_id $@5 var_def_list

   20 $@6: /* empty */

   21 var_def_list: "," T_id "=" expr $@6 var_def_list

   22 $@7: /* empty */

   23 var_def_list: "," T_id var_init_list $@7 var_def_list
   24             | /* empty */

   25 $@8: /* empty */

   26 var_init_list: "[" const_expr "]" $@8 var_init_list
   27              | "[" const_expr "]"

   28 routine_header: choose "(" routine_header_if ")"

   29 choose: "PROC" T_id
   30       | "FUNC" type T_id

   31 routine_header_if: type formal routine_header_if_list
   32                  | /* empty */

   33 routine_header_if_list: "," type formal routine_header_if_list
   34                       | /* empty */

   35 formal: "&" T_id
   36       | T_id
   37       | T_id formal_list

   38 formal_if2: const_expr
   39           | /* empty */

   40 formal_list: "[" formal_if2 "]" formal_list
   41            | "[" formal_if2 "]"

   42 routine: routine_header ";"

   43 $@9: /* empty */

   44 routine: routine_header $@9 block

   45 program_header: "PROGRAM" T_id "(" ")"

   46 $@10: /* empty */

   47 program: program_header $@10 block

   48 type: "int"
   49     | "bool"
   50     | "char"
   51     | "REAL"

   52 l_value: T_id

   53 $@11: /* empty */

   54 l_value: T_id $@11 "[" expr "]" l_value_list

   55 l_value_list: /* empty */
   56             | "[" expr "]" l_value_list

   57 $@12: /* empty */

   58 $@13: /* empty */

   59 call: T_id $@12 "(" $@13 call_if ")"

   60 $@14: /* empty */

   61 $@15: /* empty */

   62 call_if: $@14 expr $@15 call_if_list
   63        | /* empty */

   64 $@16: /* empty */

   65 $@17: /* empty */

   66 call_if_list: "," $@16 expr $@17 call_if_list
   67             | /* empty */

   68 block: "{" block_list "}"

   69 block_list: local_def block_list

   70 $@18: /* empty */

   71 block_list: stmt $@18 block_list
   72           | /* empty */

   73 local_def: const_def
   74          | var_def

   75 stmt: ";"
   76     | l_value "=" expr ";"
   77     | l_value "+=" expr ";"
   78     | l_value "-=" expr ";"
   79     | l_value "*=" expr ";"
   80     | l_value "/=" expr ";"
   81     | l_value "%=" expr ";"
   82     | l_value "++" ";"
   83     | l_value "--" ";"
   84     | call ";"

   85 $@19: /* empty */

   86 stmt: "if" "(" cond ")" $@19 stmt

   87 $@20: /* empty */

   88 $@21: /* empty */

   89 stmt: "if" "(" cond ")" $@20 stmt "else" $@21 stmt

   90 $@22: /* empty */

   91 $@23: /* empty */

   92 stmt: T_while $@22 "(" cond ")" $@23 stmt

   93 $@24: /* empty */

   94 $@25: /* empty */

   95 stmt: T_FOR $@24 "(" T_id "," range $@25 ")" stmt

   96 $@26: /* empty */

   97 $@27: /* empty */

   98 $@28: /* empty */

   99 stmt: T_do $@26 stmt $@27 T_while $@28 "(" cond ")" ";"

  100 $@29: /* empty */

  101 stmt: "switch" "(" expr $@29 ")" "{" switch_cases "}"
  102     | "break" ";"
  103     | "continue" ";"
  104     | "return" expr ";"
  105     | "return" ";"
  106     | block
  107     | write "(" ")" ";"
  108     | write "(" format format_more ")" ";"

  109 switch_cases: switch_cases choose_case
  110             | /* empty */

  111 $@30: /* empty */

  112 choose_case: "case" expr $@30 ":" statement_list "break" ";"

  113 $@31: /* empty */

  114 choose_case: "case" expr $@31 ":" statement_list "NEXT" ";"
  115            | "default" ":" statement_list "break" ";"
  116            | "default" ":" statement_list "NEXT" ";"

  117 statement_list: statement_list stmt
  118               | /* empty */

  119 range: expr range_choose expr
  120      | expr range_choose expr "STEP" expr

  121 range_choose: "TO"
  122             | "DOWNTO"

  123 format_more: "," format format_more
  124            | /* empty */

  125 format: expr
  126       | "FORM" "(" expr "," expr "," expr ")"
  127       | "FORM" "(" expr "," expr ")"

  128 write: "WRITE"
  129      | "WRITELN"
  130      | "WRITESP"
  131      | "WRITESPLN"

  132 $@32: /* empty */

  133 const_expr: $@32 expr

  134 expr: T_const_int
  135     | T_const_real
  136     | T_const_char
  137     | T_string
  138     | "true"
  139     | "false"
  140     | "(" expr ")"
  141     | l_value
  142     | call
  143     | "+" expr
  144     | "-" expr
  145     | expr "+" expr
  146     | expr "-" expr
  147     | expr "*" expr
  148     | expr "/" expr
  149     | expr "%" expr
  150     | expr "MOD" expr

  151 cond: expr "==" expr
  152     | expr "!=" expr
  153     | expr "<" expr
  154     | expr ">" expr
  155     | expr "<=" expr
  156     | expr ">=" expr
  157     | "not" cond
  158     | "!" cond

  159 $@33: /* empty */

  160 cond: cond "AND" $@33 cond

  161 $@34: /* empty */

  162 cond: cond "and" $@34 cond

  163 $@35: /* empty */

  164 cond: cond "OR" $@35 cond

  165 $@36: /* empty */

  166 cond: cond "or" $@36 cond
  167     | expr

  168 expr: cond


Terminals, with rules where they appear

$end (0) 0
error (256)
"bool" (258) 49
"and" (259) 162
"break" (260) 102 112 115
"case" (261) 112 114
"char" (262) 50
"const" (263) 9
"continue" (264) 103
"default" (265) 115 116
T_do (266) 99
"DOWNTO" (267) 122
"else" (268) 89
"false" (269) 139
T_FOR (270) 95
"FORM" (271) 126 127
"FUNC" (272) 30
"if" (273) 86 89
"int" (274) 48
"MOD" (275) 150
"NEXT" (276) 114 116
"not" (277) 157
"or" (278) 166
"PROC" (279) 29
"PROGRAM" (280) 45
"REAL" (281) 51
"return" (282) 104 105
"STEP" (283) 120
"switch" (284) 101
"TO" (285) 121
"true" (286) 138
T_while (287) 92 99
"WRITE" (288) 128
"WRITELN" (289) 129
"WRITESP" (290) 130
"WRITESPLN" (291) 131
T_const_int (292) 134
T_const_real (293) 135
T_id (294) 9 10 13 15 17 19 21 23 29 30 35 36 37 45 52 54 59 95
T_const_char (295) 136
T_string (296) 137
"==" (297) 151
">" (298) 154
"<" (299) 153
"!=" (300) 152
">=" (301) 156
"<=" (302) 155
"+" (303) 143 145
"-" (304) 144 146
"*" (305) 147
"/" (306) 148
"%" (307) 149
"!" (308) 158
"AND" (309) 160
"OR" (310) 164
"++" (311) 82
"--" (312) 83
"=" (313) 9 10 15 21 76
"+=" (314) 77
"-=" (315) 78
"*=" (316) 79
"/=" (317) 80
"%=" (318) 81
"&" (319) 35
";" (320) 9 13 15 17 42 75 76 77 78 79 80 81 82 83 84 99 102 103 104
    105 107 108 112 114 115 116
"." (321)
"(" (322) 28 45 59 86 89 92 95 99 101 107 108 126 127 140
")" (323) 28 45 59 86 89 92 95 99 101 107 108 126 127 140
":" (324) 112 114 115 116
"," (325) 10 19 21 23 33 66 95 123 126 127
"[" (326) 26 27 40 41 54 56
"]" (327) 26 27 40 41 54 56
"{" (328) 68 101
"}" (329) 68 101
T_eof (330)


Nonterminals, with rules where they appear

$accept (76)
    on left: 0
module (77)
    on left: 2, on right: 0
$@1 (78)
    on left: 1, on right: 2
declaration_list (79)
    on left: 3 4, on right: 2 3
declaration (80)
    on left: 5 6 7 8, on right: 3
const_def (81)
    on left: 9, on right: 5 73
const_def_list (82)
    on left: 10 11, on right: 9 10
var_def (83)
    on left: 13 15 17, on right: 6 74
$@2 (84)
    on left: 12, on right: 13
$@3 (85)
    on left: 14, on right: 15
$@4 (86)
    on left: 16, on right: 17
var_def_list (87)
    on left: 19 21 23 24, on right: 13 15 17 19 21 23
$@5 (88)
    on left: 18, on right: 19
$@6 (89)
    on left: 20, on right: 21
$@7 (90)
    on left: 22, on right: 23
var_init_list (91)
    on left: 26 27, on right: 17 23 26
$@8 (92)
    on left: 25, on right: 26
routine_header (93)
    on left: 28, on right: 42 44
choose (94)
    on left: 29 30, on right: 28
routine_header_if (95)
    on left: 31 32, on right: 28
routine_header_if_list (96)
    on left: 33 34, on right: 31 33
formal (97)
    on left: 35 36 37, on right: 31 33
formal_if2 (98)
    on left: 38 39, on right: 40 41
formal_list (99)
    on left: 40 41, on right: 37 40
routine (100)
    on left: 42 44, on right: 7
$@9 (101)
    on left: 43, on right: 44
program_header (102)
    on left: 45, on right: 47
program (103)
    on left: 47, on right: 8
$@10 (104)
    on left: 46, on right: 47
type (105)
    on left: 48 49 50 51, on right: 9 13 15 17 30 31 33
l_value (106)
    on left: 52 54, on right: 76 77 78 79 80 81 82 83 141
$@11 (107)
    on left: 53, on right: 54
l_value_list (108)
    on left: 55 56, on right: 54 56
call (109)
    on left: 59, on right: 84 142
$@12 (110)
    on left: 57, on right: 59
$@13 (111)
    on left: 58, on right: 59
call_if (112)
    on left: 62 63, on right: 59
$@14 (113)
    on left: 60, on right: 62
$@15 (114)
    on left: 61, on right: 62
call_if_list (115)
    on left: 66 67, on right: 62 66
$@16 (116)
    on left: 64, on right: 66
$@17 (117)
    on left: 65, on right: 66
block (118)
    on left: 68, on right: 44 47 106
block_list (119)
    on left: 69 71 72, on right: 68 69 71
$@18 (120)
    on left: 70, on right: 71
local_def (121)
    on left: 73 74, on right: 69
stmt (122)
    on left: 75 76 77 78 79 80 81 82 83 84 86 89 92 95 99 101 102 103
    104 105 106 107 108, on right: 71 86 89 92 95 99 117
$@19 (123)
    on left: 85, on right: 86
$@20 (124)
    on left: 87, on right: 89
$@21 (125)
    on left: 88, on right: 89
$@22 (126)
    on left: 90, on right: 92
$@23 (127)
    on left: 91, on right: 92
$@24 (128)
    on left: 93, on right: 95
$@25 (129)
    on left: 94, on right: 95
$@26 (130)
    on left: 96, on right: 99
$@27 (131)
    on left: 97, on right: 99
$@28 (132)
    on left: 98, on right: 99
$@29 (133)
    on left: 100, on right: 101
switch_cases (134)
    on left: 109 110, on right: 101 109
choose_case (135)
    on left: 112 114 115 116, on right: 109
$@30 (136)
    on left: 111, on right: 112
$@31 (137)
    on left: 113, on right: 114
statement_list (138)
    on left: 117 118, on right: 112 114 115 116 117
range (139)
    on left: 119 120, on right: 95
range_choose (140)
    on left: 121 122, on right: 119 120
format_more (141)
    on left: 123 124, on right: 108 123
format (142)
    on left: 125 126 127, on right: 108 123
write (143)
    on left: 128 129 130 131, on right: 107 108
const_expr (144)
    on left: 133, on right: 9 10 26 27 38
$@32 (145)
    on left: 132, on right: 133
expr (146)
    on left: 134 135 136 137 138 139 140 141 142 143 144 145 146 147
    148 149 150 168, on right: 15 21 54 56 62 66 76 77 78 79 80 81
    101 104 112 114 119 120 125 126 127 133 140 143 144 145 146 147
    148 149 150 151 152 153 154 155 156 167
cond (147)
    on left: 151 152 153 154 155 156 157 158 160 162 164 166 167, on right:
    86 89 92 99 157 158 160 162 164 166 168
$@33 (148)
    on left: 159, on right: 160
$@34 (149)
    on left: 161, on right: 162
$@35 (150)
    on left: 163, on right: 164
$@36 (151)
    on left: 165, on right: 166


state 0

    0 $accept: . module $end

    $default  reduce using rule 1 ($@1)

    module  go to state 1
    $@1     go to state 2


state 1

    0 $accept: module . $end

    $end  shift, and go to state 3


state 2

    2 module: $@1 . declaration_list

    "bool"     shift, and go to state 4
    "char"     shift, and go to state 5
    "const"    shift, and go to state 6
    "FUNC"     shift, and go to state 7
    "int"      shift, and go to state 8
    "PROC"     shift, and go to state 9
    "PROGRAM"  shift, and go to state 10
    "REAL"     shift, and go to state 11

    $default  reduce using rule 4 (declaration_list)

    declaration_list  go to state 12
    declaration       go to state 13
    const_def         go to state 14
    var_def           go to state 15
    routine_header    go to state 16
    choose            go to state 17
    routine           go to state 18
    program_header    go to state 19
    program           go to state 20
    type              go to state 21


state 3

    0 $accept: module $end .

    $default  accept


state 4

   49 type: "bool" .

    $default  reduce using rule 49 (type)


state 5

   50 type: "char" .

    $default  reduce using rule 50 (type)


state 6

    9 const_def: "const" . type T_id "=" const_expr const_def_list ";"

    "bool"  shift, and go to state 4
    "char"  shift, and go to state 5
    "int"   shift, and go to state 8
    "REAL"  shift, and go to state 11

    type  go to state 22


state 7

   30 choose: "FUNC" . type T_id

    "bool"  shift, and go to state 4
    "char"  shift, and go to state 5
    "int"   shift, and go to state 8
    "REAL"  shift, and go to state 11

    type  go to state 23


state 8

   48 type: "int" .

    $default  reduce using rule 48 (type)


state 9

   29 choose: "PROC" . T_id

    T_id  shift, and go to state 24


state 10

   45 program_header: "PROGRAM" . T_id "(" ")"

    T_id  shift, and go to state 25


state 11

   51 type: "REAL" .

    $default  reduce using rule 51 (type)


state 12

    2 module: $@1 declaration_list .

    $default  reduce using rule 2 (module)


state 13

    3 declaration_list: declaration . declaration_list

    "bool"     shift, and go to state 4
    "char"     shift, and go to state 5
    "const"    shift, and go to state 6
    "FUNC"     shift, and go to state 7
    "int"      shift, and go to state 8
    "PROC"     shift, and go to state 9
    "PROGRAM"  shift, and go to state 10
    "REAL"     shift, and go to state 11

    $default  reduce using rule 4 (declaration_list)

    declaration_list  go to state 26
    declaration       go to state 13
    const_def         go to state 14
    var_def           go to state 15
    routine_header    go to state 16
    choose            go to state 17
    routine           go to state 18
    program_header    go to state 19
    program           go to state 20
    type              go to state 21


state 14

    5 declaration: const_def .

    $default  reduce using rule 5 (declaration)


state 15

    6 declaration: var_def .

    $default  reduce using rule 6 (declaration)


state 16

   42 routine: routine_header . ";"
   44        | routine_header . $@9 block

    ";"  shift, and go to state 27

    $default  reduce using rule 43 ($@9)

    $@9  go to state 28


state 17

   28 routine_header: choose . "(" routine_header_if ")"

    "("  shift, and go to state 29


state 18

    7 declaration: routine .

    $default  reduce using rule 7 (declaration)


state 19

   47 program: program_header . $@10 block

    $default  reduce using rule 46 ($@10)

    $@10  go to state 30


state 20

    8 declaration: program .

    $default  reduce using rule 8 (declaration)


state 21

   13 var_def: type . T_id $@2 var_def_list ";"
   15        | type . T_id "=" expr $@3 var_def_list ";"
   17        | type . T_id var_init_list $@4 var_def_list ";"

    T_id  shift, and go to state 31


state 22

    9 const_def: "const" type . T_id "=" const_expr const_def_list ";"

    T_id  shift, and go to state 32


state 23

   30 choose: "FUNC" type . T_id

    T_id  shift, and go to state 33


state 24

   29 choose: "PROC" T_id .

    $default  reduce using rule 29 (choose)


state 25

   45 program_header: "PROGRAM" T_id . "(" ")"

    "("  shift, and go to state 34


state 26

    3 declaration_list: declaration declaration_list .

    $default  reduce using rule 3 (declaration_list)


state 27

   42 routine: routine_header ";" .

    $default  reduce using rule 42 (routine)


state 28

   44 routine: routine_header $@9 . block

    "{"  shift, and go to state 35

    block  go to state 36


state 29

   28 routine_header: choose "(" . routine_header_if ")"

    "bool"  shift, and go to state 4
    "char"  shift, and go to state 5
    "int"   shift, and go to state 8
    "REAL"  shift, and go to state 11

    $default  reduce using rule 32 (routine_header_if)

    routine_header_if  go to state 37
    type               go to state 38


state 30

   47 program: program_header $@10 . block

    "{"  shift, and go to state 35

    block  go to state 39


state 31

   13 var_def: type T_id . $@2 var_def_list ";"
   15        | type T_id . "=" expr $@3 var_def_list ";"
   17        | type T_id . var_init_list $@4 var_def_list ";"

    "="  shift, and go to state 40
    "["  shift, and go to state 41

    $default  reduce using rule 12 ($@2)

    $@2            go to state 42
    var_init_list  go to state 43


state 32

    9 const_def: "const" type T_id . "=" const_expr const_def_list ";"

    "="  shift, and go to state 44


state 33

   30 choose: "FUNC" type T_id .

    $default  reduce using rule 30 (choose)


state 34

   45 program_header: "PROGRAM" T_id "(" . ")"

    ")"  shift, and go to state 45


state 35

   68 block: "{" . block_list "}"

    "bool"       shift, and go to state 4
    "break"      shift, and go to state 46
    "char"       shift, and go to state 5
    "const"      shift, and go to state 6
    "continue"   shift, and go to state 47
    T_do         shift, and go to state 48
    T_FOR        shift, and go to state 49
    "if"         shift, and go to state 50
    "int"        shift, and go to state 8
    "REAL"       shift, and go to state 11
    "return"     shift, and go to state 51
    "switch"     shift, and go to state 52
    T_while      shift, and go to state 53
    "WRITE"      shift, and go to state 54
    "WRITELN"    shift, and go to state 55
    "WRITESP"    shift, and go to state 56
    "WRITESPLN"  shift, and go to state 57
    T_id         shift, and go to state 58
    ";"          shift, and go to state 59
    "{"          shift, and go to state 35

    $default  reduce using rule 72 (block_list)

    const_def   go to state 60
    var_def     go to state 61
    type        go to state 21
    l_value     go to state 62
    call        go to state 63
    block       go to state 64
    block_list  go to state 65
    local_def   go to state 66
    stmt        go to state 67
    write       go to state 68


state 36

   44 routine: routine_header $@9 block .

    $default  reduce using rule 44 (routine)


state 37

   28 routine_header: choose "(" routine_header_if . ")"

    ")"  shift, and go to state 69


state 38

   31 routine_header_if: type . formal routine_header_if_list

    T_id  shift, and go to state 70
    "&"   shift, and go to state 71

    formal  go to state 72


state 39

   47 program: program_header $@10 block .

    $default  reduce using rule 47 (program)


state 40

   15 var_def: type T_id "=" . expr $@3 var_def_list ";"

    "false"       shift, and go to state 73
    "not"         shift, and go to state 74
    "true"        shift, and go to state 75
    T_const_int   shift, and go to state 76
    T_const_real  shift, and go to state 77
    T_id          shift, and go to state 58
    T_const_char  shift, and go to state 78
    T_string      shift, and go to state 79
    "+"           shift, and go to state 80
    "-"           shift, and go to state 81
    "!"           shift, and go to state 82
    "("           shift, and go to state 83

    l_value  go to state 84
    call     go to state 85
    expr     go to state 86
    cond     go to state 87


state 41

   26 var_init_list: "[" . const_expr "]" $@8 var_init_list
   27              | "[" . const_expr "]"

    $default  reduce using rule 132 ($@32)

    const_expr  go to state 88
    $@32        go to state 89


state 42

   13 var_def: type T_id $@2 . var_def_list ";"

    ","  shift, and go to state 90

    $default  reduce using rule 24 (var_def_list)

    var_def_list  go to state 91


state 43

   17 var_def: type T_id var_init_list . $@4 var_def_list ";"

    $default  reduce using rule 16 ($@4)

    $@4  go to state 92


state 44

    9 const_def: "const" type T_id "=" . const_expr const_def_list ";"

    $default  reduce using rule 132 ($@32)

    const_expr  go to state 93
    $@32        go to state 89


state 45

   45 program_header: "PROGRAM" T_id "(" ")" .

    $default  reduce using rule 45 (program_header)


state 46

  102 stmt: "break" . ";"

    ";"  shift, and go to state 94


state 47

  103 stmt: "continue" . ";"

    ";"  shift, and go to state 95


state 48

   99 stmt: T_do . $@26 stmt $@27 T_while $@28 "(" cond ")" ";"

    $default  reduce using rule 96 ($@26)

    $@26  go to state 96


state 49

   95 stmt: T_FOR . $@24 "(" T_id "," range $@25 ")" stmt

    $default  reduce using rule 93 ($@24)

    $@24  go to state 97


state 50

   86 stmt: "if" . "(" cond ")" $@19 stmt
   89     | "if" . "(" cond ")" $@20 stmt "else" $@21 stmt

    "("  shift, and go to state 98


state 51

  104 stmt: "return" . expr ";"
  105     | "return" . ";"

    "false"       shift, and go to state 73
    "not"         shift, and go to state 74
    "true"        shift, and go to state 75
    T_const_int   shift, and go to state 76
    T_const_real  shift, and go to state 77
    T_id          shift, and go to state 58
    T_const_char  shift, and go to state 78
    T_string      shift, and go to state 79
    "+"           shift, and go to state 80
    "-"           shift, and go to state 81
    "!"           shift, and go to state 82
    ";"           shift, and go to state 99
    "("           shift, and go to state 83

    l_value  go to state 84
    call     go to state 85
    expr     go to state 100
    cond     go to state 87


state 52

  101 stmt: "switch" . "(" expr $@29 ")" "{" switch_cases "}"

    "("  shift, and go to state 101


state 53

   92 stmt: T_while . $@22 "(" cond ")" $@23 stmt

    $default  reduce using rule 90 ($@22)

    $@22  go to state 102


state 54

  128 write: "WRITE" .

    $default  reduce using rule 128 (write)


state 55

  129 write: "WRITELN" .

    $default  reduce using rule 129 (write)


state 56

  130 write: "WRITESP" .

    $default  reduce using rule 130 (write)


state 57

  131 write: "WRITESPLN" .

    $default  reduce using rule 131 (write)


state 58

   52 l_value: T_id .
   54        | T_id . $@11 "[" expr "]" l_value_list
   59 call: T_id . $@12 "(" $@13 call_if ")"

    "("       reduce using rule 57 ($@12)
    "["       reduce using rule 53 ($@11)
    $default  reduce using rule 52 (l_value)

    $@11  go to state 103
    $@12  go to state 104


state 59

   75 stmt: ";" .

    $default  reduce using rule 75 (stmt)


state 60

   73 local_def: const_def .

    $default  reduce using rule 73 (local_def)


state 61

   74 local_def: var_def .

    $default  reduce using rule 74 (local_def)


state 62

   76 stmt: l_value . "=" expr ";"
   77     | l_value . "+=" expr ";"
   78     | l_value . "-=" expr ";"
   79     | l_value . "*=" expr ";"
   80     | l_value . "/=" expr ";"
   81     | l_value . "%=" expr ";"
   82     | l_value . "++" ";"
   83     | l_value . "--" ";"

    "++"  shift, and go to state 105
    "--"  shift, and go to state 106
    "="   shift, and go to state 107
    "+="  shift, and go to state 108
    "-="  shift, and go to state 109
    "*="  shift, and go to state 110
    "/="  shift, and go to state 111
    "%="  shift, and go to state 112


state 63

   84 stmt: call . ";"

    ";"  shift, and go to state 113


state 64

  106 stmt: block .

    $default  reduce using rule 106 (stmt)


state 65

   68 block: "{" block_list . "}"

    "}"  shift, and go to state 114


state 66

   69 block_list: local_def . block_list

    "bool"       shift, and go to state 4
    "break"      shift, and go to state 46
    "char"       shift, and go to state 5
    "const"      shift, and go to state 6
    "continue"   shift, and go to state 47
    T_do         shift, and go to state 48
    T_FOR        shift, and go to state 49
    "if"         shift, and go to state 50
    "int"        shift, and go to state 8
    "REAL"       shift, and go to state 11
    "return"     shift, and go to state 51
    "switch"     shift, and go to state 52
    T_while      shift, and go to state 53
    "WRITE"      shift, and go to state 54
    "WRITELN"    shift, and go to state 55
    "WRITESP"    shift, and go to state 56
    "WRITESPLN"  shift, and go to state 57
    T_id         shift, and go to state 58
    ";"          shift, and go to state 59
    "{"          shift, and go to state 35

    $default  reduce using rule 72 (block_list)

    const_def   go to state 60
    var_def     go to state 61
    type        go to state 21
    l_value     go to state 62
    call        go to state 63
    block       go to state 64
    block_list  go to state 115
    local_def   go to state 66
    stmt        go to state 67
    write       go to state 68


state 67

   71 block_list: stmt . $@18 block_list

    $default  reduce using rule 70 ($@18)

    $@18  go to state 116


state 68

  107 stmt: write . "(" ")" ";"
  108     | write . "(" format format_more ")" ";"

    "("  shift, and go to state 117


state 69

   28 routine_header: choose "(" routine_header_if ")" .

    $default  reduce using rule 28 (routine_header)


state 70

   36 formal: T_id .
   37       | T_id . formal_list

    "["  shift, and go to state 118

    $default  reduce using rule 36 (formal)

    formal_list  go to state 119


state 71

   35 formal: "&" . T_id

    T_id  shift, and go to state 120


state 72

   31 routine_header_if: type formal . routine_header_if_list

    ","  shift, and go to state 121

    $default  reduce using rule 34 (routine_header_if_list)

    routine_header_if_list  go to state 122


state 73

  139 expr: "false" .

    $default  reduce using rule 139 (expr)


state 74

  157 cond: "not" . cond

    "false"       shift, and go to state 73
    "not"         shift, and go to state 74
    "true"        shift, and go to state 75
    T_const_int   shift, and go to state 76
    T_const_real  shift, and go to state 77
    T_id          shift, and go to state 58
    T_const_char  shift, and go to state 78
    T_string      shift, and go to state 79
    "+"           shift, and go to state 80
    "-"           shift, and go to state 81
    "!"           shift, and go to state 82
    "("           shift, and go to state 83

    l_value  go to state 84
    call     go to state 85
    expr     go to state 123
    cond     go to state 124


state 75

  138 expr: "true" .

    $default  reduce using rule 138 (expr)


state 76

  134 expr: T_const_int .

    $default  reduce using rule 134 (expr)


state 77

  135 expr: T_const_real .

    $default  reduce using rule 135 (expr)


state 78

  136 expr: T_const_char .

    $default  reduce using rule 136 (expr)


state 79

  137 expr: T_string .

    $default  reduce using rule 137 (expr)


state 80

  143 expr: "+" . expr

    "false"       shift, and go to state 73
    "not"         shift, and go to state 74
    "true"        shift, and go to state 75
    T_const_int   shift, and go to state 76
    T_const_real  shift, and go to state 77
    T_id          shift, and go to state 58
    T_const_char  shift, and go to state 78
    T_string      shift, and go to state 79
    "+"           shift, and go to state 80
    "-"           shift, and go to state 81
    "!"           shift, and go to state 82
    "("           shift, and go to state 83

    l_value  go to state 84
    call     go to state 85
    expr     go to state 125
    cond     go to state 87


state 81

  144 expr: "-" . expr

    "false"       shift, and go to state 73
    "not"         shift, and go to state 74
    "true"        shift, and go to state 75
    T_const_int   shift, and go to state 76
    T_const_real  shift, and go to state 77
    T_id          shift, and go to state 58
    T_const_char  shift, and go to state 78
    T_string      shift, and go to state 79
    "+"           shift, and go to state 80
    "-"           shift, and go to state 81
    "!"           shift, and go to state 82
    "("           shift, and go to state 83

    l_value  go to state 84
    call     go to state 85
    expr     go to state 126
    cond     go to state 87


state 82

  158 cond: "!" . cond

    "false"       shift, and go to state 73
    "not"         shift, and go to state 74
    "true"        shift, and go to state 75
    T_const_int   shift, and go to state 76
    T_const_real  shift, and go to state 77
    T_id          shift, and go to state 58
    T_const_char  shift, and go to state 78
    T_string      shift, and go to state 79
    "+"           shift, and go to state 80
    "-"           shift, and go to state 81
    "!"           shift, and go to state 82
    "("           shift, and go to state 83

    l_value  go to state 84
    call     go to state 85
    expr     go to state 123
    cond     go to state 127


state 83

  140 expr: "(" . expr ")"

    "false"       shift, and go to state 73
    "not"         shift, and go to state 74
    "true"        shift, and go to state 75
    T_const_int   shift, and go to state 76
    T_const_real  shift, and go to state 77
    T_id          shift, and go to state 58
    T_const_char  shift, and go to state 78
    T_string      shift, and go to state 79
    "+"           shift, and go to state 80
    "-"           shift, and go to state 81
    "!"           shift, and go to state 82
    "("           shift, and go to state 83

    l_value  go to state 84
    call     go to state 85
    expr     go to state 128
    cond     go to state 87


state 84

  141 expr: l_value .

    $default  reduce using rule 141 (expr)


state 85

  142 expr: call .

    $default  reduce using rule 142 (expr)


state 86

   15 var_def: type T_id "=" expr . $@3 var_def_list ";"
  145 expr: expr . "+" expr
  146     | expr . "-" expr
  147     | expr . "*" expr
  148     | expr . "/" expr
  149     | expr . "%" expr
  150     | expr . "MOD" expr
  151 cond: expr . "==" expr
  152     | expr . "!=" expr
  153     | expr . "<" expr
  154     | expr . ">" expr
  155     | expr . "<=" expr
  156     | expr . ">=" expr
  167     | expr .

    "MOD"  shift, and go to state 129
    "=="   shift, and go to state 130
    ">"    shift, and go to state 131
    "<"    shift, and go to state 132
    "!="   shift, and go to state 133
    ">="   shift, and go to state 134
    "<="   shift, and go to state 135
    "+"    shift, and go to state 136
    "-"    shift, and go to state 137
    "*"    shift, and go to state 138
    "/"    shift, and go to state 139
    "%"    shift, and go to state 140

    "MOD"     [reduce using rule 167 (cond)]
    "=="      [reduce using rule 167 (cond)]
    ">"       [reduce using rule 167 (cond)]
    "<"       [reduce using rule 167 (cond)]
    "!="      [reduce using rule 167 (cond)]
    ">="      [reduce using rule 167 (cond)]
    "<="      [reduce using rule 167 (cond)]
    "+"       [reduce using rule 167 (cond)]
    "-"       [reduce using rule 167 (cond)]
    "*"       [reduce using rule 167 (cond)]
    "/"       [reduce using rule 167 (cond)]
    "%"       [reduce using rule 167 (cond)]
    ";"       reduce using rule 14 ($@3)
    ";"       [reduce using rule 167 (cond)]
    ","       reduce using rule 14 ($@3)
    ","       [reduce using rule 167 (cond)]
    $default  reduce using rule 167 (cond)

    $@3  go to state 141


state 87

  160 cond: cond . "AND" $@33 cond
  162     | cond . "and" $@34 cond
  164     | cond . "OR" $@35 cond
  166     | cond . "or" $@36 cond
  168 expr: cond .

    "and"  shift, and go to state 142
    "or"   shift, and go to state 143
    "AND"  shift, and go to state 144
    "OR"   shift, and go to state 145

    "and"     [reduce using rule 168 (expr)]
    "or"      [reduce using rule 168 (expr)]
    "AND"     [reduce using rule 168 (expr)]
    "OR"      [reduce using rule 168 (expr)]
    $default  reduce using rule 168 (expr)


state 88

   26 var_init_list: "[" const_expr . "]" $@8 var_init_list
   27              | "[" const_expr . "]"

    "]"  shift, and go to state 146


state 89

  133 const_expr: $@32 . expr

    "false"       shift, and go to state 73
    "not"         shift, and go to state 74
    "true"        shift, and go to state 75
    T_const_int   shift, and go to state 76
    T_const_real  shift, and go to state 77
    T_id          shift, and go to state 58
    T_const_char  shift, and go to state 78
    T_string      shift, and go to state 79
    "+"           shift, and go to state 80
    "-"           shift, and go to state 81
    "!"           shift, and go to state 82
    "("           shift, and go to state 83

    l_value  go to state 84
    call     go to state 85
    expr     go to state 147
    cond     go to state 87


state 90

   19 var_def_list: "," . T_id $@5 var_def_list
   21             | "," . T_id "=" expr $@6 var_def_list
   23             | "," . T_id var_init_list $@7 var_def_list

    T_id  shift, and go to state 148


state 91

   13 var_def: type T_id $@2 var_def_list . ";"

    ";"  shift, and go to state 149


state 92

   17 var_def: type T_id var_init_list $@4 . var_def_list ";"

    ","  shift, and go to state 90

    $default  reduce using rule 24 (var_def_list)

    var_def_list  go to state 150


state 93

    9 const_def: "const" type T_id "=" const_expr . const_def_list ";"

    ","  shift, and go to state 151

    $default  reduce using rule 11 (const_def_list)

    const_def_list  go to state 152


state 94

  102 stmt: "break" ";" .

    $default  reduce using rule 102 (stmt)


state 95

  103 stmt: "continue" ";" .

    $default  reduce using rule 103 (stmt)


state 96

   99 stmt: T_do $@26 . stmt $@27 T_while $@28 "(" cond ")" ";"

    "break"      shift, and go to state 46
    "continue"   shift, and go to state 47
    T_do         shift, and go to state 48
    T_FOR        shift, and go to state 49
    "if"         shift, and go to state 50
    "return"     shift, and go to state 51
    "switch"     shift, and go to state 52
    T_while      shift, and go to state 53
    "WRITE"      shift, and go to state 54
    "WRITELN"    shift, and go to state 55
    "WRITESP"    shift, and go to state 56
    "WRITESPLN"  shift, and go to state 57
    T_id         shift, and go to state 58
    ";"          shift, and go to state 59
    "{"          shift, and go to state 35

    l_value  go to state 62
    call     go to state 63
    block    go to state 64
    stmt     go to state 153
    write    go to state 68


state 97

   95 stmt: T_FOR $@24 . "(" T_id "," range $@25 ")" stmt

    "("  shift, and go to state 154


state 98

   86 stmt: "if" "(" . cond ")" $@19 stmt
   89     | "if" "(" . cond ")" $@20 stmt "else" $@21 stmt

    "false"       shift, and go to state 73
    "not"         shift, and go to state 74
    "true"        shift, and go to state 75
    T_const_int   shift, and go to state 76
    T_const_real  shift, and go to state 77
    T_id          shift, and go to state 58
    T_const_char  shift, and go to state 78
    T_string      shift, and go to state 79
    "+"           shift, and go to state 80
    "-"           shift, and go to state 81
    "!"           shift, and go to state 82
    "("           shift, and go to state 83

    l_value  go to state 84
    call     go to state 85
    expr     go to state 123
    cond     go to state 155


state 99

  105 stmt: "return" ";" .

    $default  reduce using rule 105 (stmt)


state 100

  104 stmt: "return" expr . ";"
  145 expr: expr . "+" expr
  146     | expr . "-" expr
  147     | expr . "*" expr
  148     | expr . "/" expr
  149     | expr . "%" expr
  150     | expr . "MOD" expr
  151 cond: expr . "==" expr
  152     | expr . "!=" expr
  153     | expr . "<" expr
  154     | expr . ">" expr
  155     | expr . "<=" expr
  156     | expr . ">=" expr
  167     | expr .

    "MOD"  shift, and go to state 129
    "=="   shift, and go to state 130
    ">"    shift, and go to state 131
    "<"    shift, and go to state 132
    "!="   shift, and go to state 133
    ">="   shift, and go to state 134
    "<="   shift, and go to state 135
    "+"    shift, and go to state 136
    "-"    shift, and go to state 137
    "*"    shift, and go to state 138
    "/"    shift, and go to state 139
    "%"    shift, and go to state 140
    ";"    shift, and go to state 156

    "MOD"     [reduce using rule 167 (cond)]
    "=="      [reduce using rule 167 (cond)]
    ">"       [reduce using rule 167 (cond)]
    "<"       [reduce using rule 167 (cond)]
    "!="      [reduce using rule 167 (cond)]
    ">="      [reduce using rule 167 (cond)]
    "<="      [reduce using rule 167 (cond)]
    "+"       [reduce using rule 167 (cond)]
    "-"       [reduce using rule 167 (cond)]
    "*"       [reduce using rule 167 (cond)]
    "/"       [reduce using rule 167 (cond)]
    "%"       [reduce using rule 167 (cond)]
    ";"       [reduce using rule 167 (cond)]
    $default  reduce using rule 167 (cond)


state 101

  101 stmt: "switch" "(" . expr $@29 ")" "{" switch_cases "}"

    "false"       shift, and go to state 73
    "not"         shift, and go to state 74
    "true"        shift, and go to state 75
    T_const_int   shift, and go to state 76
    T_const_real  shift, and go to state 77
    T_id          shift, and go to state 58
    T_const_char  shift, and go to state 78
    T_string      shift, and go to state 79
    "+"           shift, and go to state 80
    "-"           shift, and go to state 81
    "!"           shift, and go to state 82
    "("           shift, and go to state 83

    l_value  go to state 84
    call     go to state 85
    expr     go to state 157
    cond     go to state 87


state 102

   92 stmt: T_while $@22 . "(" cond ")" $@23 stmt

    "("  shift, and go to state 158


state 103

   54 l_value: T_id $@11 . "[" expr "]" l_value_list

    "["  shift, and go to state 159


state 104

   59 call: T_id $@12 . "(" $@13 call_if ")"

    "("  shift, and go to state 160


state 105

   82 stmt: l_value "++" . ";"

    ";"  shift, and go to state 161


state 106

   83 stmt: l_value "--" . ";"

    ";"  shift, and go to state 162


state 107

   76 stmt: l_value "=" . expr ";"

    "false"       shift, and go to state 73
    "not"         shift, and go to state 74
    "true"        shift, and go to state 75
    T_const_int   shift, and go to state 76
    T_const_real  shift, and go to state 77
    T_id          shift, and go to state 58
    T_const_char  shift, and go to state 78
    T_string      shift, and go to state 79
    "+"           shift, and go to state 80
    "-"           shift, and go to state 81
    "!"           shift, and go to state 82
    "("           shift, and go to state 83

    l_value  go to state 84
    call     go to state 85
    expr     go to state 163
    cond     go to state 87


state 108

   77 stmt: l_value "+=" . expr ";"

    "false"       shift, and go to state 73
    "not"         shift, and go to state 74
    "true"        shift, and go to state 75
    T_const_int   shift, and go to state 76
    T_const_real  shift, and go to state 77
    T_id          shift, and go to state 58
    T_const_char  shift, and go to state 78
    T_string      shift, and go to state 79
    "+"           shift, and go to state 80
    "-"           shift, and go to state 81
    "!"           shift, and go to state 82
    "("           shift, and go to state 83

    l_value  go to state 84
    call     go to state 85
    expr     go to state 164
    cond     go to state 87


state 109

   78 stmt: l_value "-=" . expr ";"

    "false"       shift, and go to state 73
    "not"         shift, and go to state 74
    "true"        shift, and go to state 75
    T_const_int   shift, and go to state 76
    T_const_real  shift, and go to state 77
    T_id          shift, and go to state 58
    T_const_char  shift, and go to state 78
    T_string      shift, and go to state 79
    "+"           shift, and go to state 80
    "-"           shift, and go to state 81
    "!"           shift, and go to state 82
    "("           shift, and go to state 83

    l_value  go to state 84
    call     go to state 85
    expr     go to state 165
    cond     go to state 87


state 110

   79 stmt: l_value "*=" . expr ";"

    "false"       shift, and go to state 73
    "not"         shift, and go to state 74
    "true"        shift, and go to state 75
    T_const_int   shift, and go to state 76
    T_const_real  shift, and go to state 77
    T_id          shift, and go to state 58
    T_const_char  shift, and go to state 78
    T_string      shift, and go to state 79
    "+"           shift, and go to state 80
    "-"           shift, and go to state 81
    "!"           shift, and go to state 82
    "("           shift, and go to state 83

    l_value  go to state 84
    call     go to state 85
    expr     go to state 166
    cond     go to state 87


state 111

   80 stmt: l_value "/=" . expr ";"

    "false"       shift, and go to state 73
    "not"         shift, and go to state 74
    "true"        shift, and go to state 75
    T_const_int   shift, and go to state 76
    T_const_real  shift, and go to state 77
    T_id          shift, and go to state 58
    T_const_char  shift, and go to state 78
    T_string      shift, and go to state 79
    "+"           shift, and go to state 80
    "-"           shift, and go to state 81
    "!"           shift, and go to state 82
    "("           shift, and go to state 83

    l_value  go to state 84
    call     go to state 85
    expr     go to state 167
    cond     go to state 87


state 112

   81 stmt: l_value "%=" . expr ";"

    "false"       shift, and go to state 73
    "not"         shift, and go to state 74
    "true"        shift, and go to state 75
    T_const_int   shift, and go to state 76
    T_const_real  shift, and go to state 77
    T_id          shift, and go to state 58
    T_const_char  shift, and go to state 78
    T_string      shift, and go to state 79
    "+"           shift, and go to state 80
    "-"           shift, and go to state 81
    "!"           shift, and go to state 82
    "("           shift, and go to state 83

    l_value  go to state 84
    call     go to state 85
    expr     go to state 168
    cond     go to state 87


state 113

   84 stmt: call ";" .

    $default  reduce using rule 84 (stmt)


state 114

   68 block: "{" block_list "}" .

    $default  reduce using rule 68 (block)


state 115

   69 block_list: local_def block_list .

    $default  reduce using rule 69 (block_list)


state 116

   71 block_list: stmt $@18 . block_list

    "bool"       shift, and go to state 4
    "break"      shift, and go to state 46
    "char"       shift, and go to state 5
    "const"      shift, and go to state 6
    "continue"   shift, and go to state 47
    T_do         shift, and go to state 48
    T_FOR        shift, and go to state 49
    "if"         shift, and go to state 50
    "int"        shift, and go to state 8
    "REAL"       shift, and go to state 11
    "return"     shift, and go to state 51
    "switch"     shift, and go to state 52
    T_while      shift, and go to state 53
    "WRITE"      shift, and go to state 54
    "WRITELN"    shift, and go to state 55
    "WRITESP"    shift, and go to state 56
    "WRITESPLN"  shift, and go to state 57
    T_id         shift, and go to state 58
    ";"          shift, and go to state 59
    "{"          shift, and go to state 35

    $default  reduce using rule 72 (block_list)

    const_def   go to state 60
    var_def     go to state 61
    type        go to state 21
    l_value     go to state 62
    call        go to state 63
    block       go to state 64
    block_list  go to state 169
    local_def   go to state 66
    stmt        go to state 67
    write       go to state 68


state 117

  107 stmt: write "(" . ")" ";"
  108     | write "(" . format format_more ")" ";"

    "false"       shift, and go to state 73
    "FORM"        shift, and go to state 170
    "not"         shift, and go to state 74
    "true"        shift, and go to state 75
    T_const_int   shift, and go to state 76
    T_const_real  shift, and go to state 77
    T_id          shift, and go to state 58
    T_const_char  shift, and go to state 78
    T_string      shift, and go to state 79
    "+"           shift, and go to state 80
    "-"           shift, and go to state 81
    "!"           shift, and go to state 82
    "("           shift, and go to state 83
    ")"           shift, and go to state 171

    l_value  go to state 84
    call     go to state 85
    format   go to state 172
    expr     go to state 173
    cond     go to state 87


state 118

   40 formal_list: "[" . formal_if2 "]" formal_list
   41            | "[" . formal_if2 "]"

    "]"       reduce using rule 39 (formal_if2)
    $default  reduce using rule 132 ($@32)

    formal_if2  go to state 174
    const_expr  go to state 175
    $@32        go to state 89


state 119

   37 formal: T_id formal_list .

    $default  reduce using rule 37 (formal)


state 120

   35 formal: "&" T_id .

    $default  reduce using rule 35 (formal)


state 121

   33 routine_header_if_list: "," . type formal routine_header_if_list

    "bool"  shift, and go to state 4
    "char"  shift, and go to state 5
    "int"   shift, and go to state 8
    "REAL"  shift, and go to state 11

    type  go to state 176


state 122

   31 routine_header_if: type formal routine_header_if_list .

    $default  reduce using rule 31 (routine_header_if)


state 123

  145 expr: expr . "+" expr
  146     | expr . "-" expr
  147     | expr . "*" expr
  148     | expr . "/" expr
  149     | expr . "%" expr
  150     | expr . "MOD" expr
  151 cond: expr . "==" expr
  152     | expr . "!=" expr
  153     | expr . "<" expr
  154     | expr . ">" expr
  155     | expr . "<=" expr
  156     | expr . ">=" expr
  167     | expr .

    "MOD"  shift, and go to state 129
    "=="   shift, and go to state 130
    ">"    shift, and go to state 131
    "<"    shift, and go to state 132
    "!="   shift, and go to state 133
    ">="   shift, and go to state 134
    "<="   shift, and go to state 135
    "+"    shift, and go to state 136
    "-"    shift, and go to state 137
    "*"    shift, and go to state 138
    "/"    shift, and go to state 139
    "%"    shift, and go to state 140

    "MOD"     [reduce using rule 167 (cond)]
    "=="      [reduce using rule 167 (cond)]
    ">"       [reduce using rule 167 (cond)]
    "<"       [reduce using rule 167 (cond)]
    "!="      [reduce using rule 167 (cond)]
    ">="      [reduce using rule 167 (cond)]
    "<="      [reduce using rule 167 (cond)]
    "+"       [reduce using rule 167 (cond)]
    "-"       [reduce using rule 167 (cond)]
    "*"       [reduce using rule 167 (cond)]
    "/"       [reduce using rule 167 (cond)]
    "%"       [reduce using rule 167 (cond)]
    $default  reduce using rule 167 (cond)


state 124

  157 cond: "not" cond .
  160     | cond . "AND" $@33 cond
  162     | cond . "and" $@34 cond
  164     | cond . "OR" $@35 cond
  166     | cond . "or" $@36 cond
  168 expr: cond .

    "and"     reduce using rule 157 (cond)
    "and"     [reduce using rule 168 (expr)]
    "DOWNTO"  reduce using rule 157 (cond)
    "DOWNTO"  [reduce using rule 168 (expr)]
    "MOD"     reduce using rule 157 (cond)
    "MOD"     [reduce using rule 168 (expr)]
    "or"      reduce using rule 157 (cond)
    "or"      [reduce using rule 168 (expr)]
    "STEP"    reduce using rule 157 (cond)
    "STEP"    [reduce using rule 168 (expr)]
    "TO"      reduce using rule 157 (cond)
    "TO"      [reduce using rule 168 (expr)]
    "=="      reduce using rule 157 (cond)
    "=="      [reduce using rule 168 (expr)]
    ">"       reduce using rule 157 (cond)
    ">"       [reduce using rule 168 (expr)]
    "<"       reduce using rule 157 (cond)
    "<"       [reduce using rule 168 (expr)]
    "!="      reduce using rule 157 (cond)
    "!="      [reduce using rule 168 (expr)]
    ">="      reduce using rule 157 (cond)
    ">="      [reduce using rule 168 (expr)]
    "<="      reduce using rule 157 (cond)
    "<="      [reduce using rule 168 (expr)]
    "+"       reduce using rule 157 (cond)
    "+"       [reduce using rule 168 (expr)]
    "-"       reduce using rule 157 (cond)
    "-"       [reduce using rule 168 (expr)]
    "*"       reduce using rule 157 (cond)
    "*"       [reduce using rule 168 (expr)]
    "/"       reduce using rule 157 (cond)
    "/"       [reduce using rule 168 (expr)]
    "%"       reduce using rule 157 (cond)
    "%"       [reduce using rule 168 (expr)]
    "AND"     reduce using rule 157 (cond)
    "AND"     [reduce using rule 168 (expr)]
    "OR"      reduce using rule 157 (cond)
    "OR"      [reduce using rule 168 (expr)]
    ";"       reduce using rule 157 (cond)
    ";"       [reduce using rule 168 (expr)]
    ")"       reduce using rule 157 (cond)
    ")"       [reduce using rule 168 (expr)]
    ":"       reduce using rule 157 (cond)
    ":"       [reduce using rule 168 (expr)]
    ","       reduce using rule 157 (cond)
    ","       [reduce using rule 168 (expr)]
    "]"       reduce using rule 157 (cond)
    "]"       [reduce using rule 168 (expr)]
    $default  reduce using rule 157 (cond)


state 125

  143 expr: "+" expr .
  145     | expr . "+" expr
  146     | expr . "-" expr
  147     | expr . "*" expr
  148     | expr . "/" expr
  149     | expr . "%" expr
  150     | expr . "MOD" expr
  151 cond: expr . "==" expr
  152     | expr . "!=" expr
  153     | expr . "<" expr
  154     | expr . ">" expr
  155     | expr . "<=" expr
  156     | expr . ">=" expr
  167     | expr .

    "MOD"  shift, and go to state 129
    "*"    shift, and go to state 138
    "/"    shift, and go to state 139
    "%"    shift, and go to state 140

    "and"     reduce using rule 143 (expr)
    "and"     [reduce using rule 167 (cond)]
    "DOWNTO"  reduce using rule 143 (expr)
    "DOWNTO"  [reduce using rule 167 (cond)]
    "MOD"     [reduce using rule 167 (cond)]
    "or"      reduce using rule 143 (expr)
    "or"      [reduce using rule 167 (cond)]
    "STEP"    reduce using rule 143 (expr)
    "STEP"    [reduce using rule 167 (cond)]
    "TO"      reduce using rule 143 (expr)
    "TO"      [reduce using rule 167 (cond)]
    "=="      reduce using rule 143 (expr)
    "=="      [reduce using rule 167 (cond)]
    ">"       reduce using rule 143 (expr)
    ">"       [reduce using rule 167 (cond)]
    "<"       reduce using rule 143 (expr)
    "<"       [reduce using rule 167 (cond)]
    "!="      reduce using rule 143 (expr)
    "!="      [reduce using rule 167 (cond)]
    ">="      reduce using rule 143 (expr)
    ">="      [reduce using rule 167 (cond)]
    "<="      reduce using rule 143 (expr)
    "<="      [reduce using rule 167 (cond)]
    "+"       reduce using rule 143 (expr)
    "+"       [reduce using rule 167 (cond)]
    "-"       reduce using rule 143 (expr)
    "-"       [reduce using rule 167 (cond)]
    "*"       [reduce using rule 167 (cond)]
    "/"       [reduce using rule 167 (cond)]
    "%"       [reduce using rule 167 (cond)]
    "AND"     reduce using rule 143 (expr)
    "AND"     [reduce using rule 167 (cond)]
    "OR"      reduce using rule 143 (expr)
    "OR"      [reduce using rule 167 (cond)]
    ";"       reduce using rule 143 (expr)
    ";"       [reduce using rule 167 (cond)]
    ")"       reduce using rule 143 (expr)
    ")"       [reduce using rule 167 (cond)]
    ":"       reduce using rule 143 (expr)
    ":"       [reduce using rule 167 (cond)]
    ","       reduce using rule 143 (expr)
    ","       [reduce using rule 167 (cond)]
    "]"       reduce using rule 143 (expr)
    "]"       [reduce using rule 167 (cond)]
    $default  reduce using rule 143 (expr)


state 126

  144 expr: "-" expr .
  145     | expr . "+" expr
  146     | expr . "-" expr
  147     | expr . "*" expr
  148     | expr . "/" expr
  149     | expr . "%" expr
  150     | expr . "MOD" expr
  151 cond: expr . "==" expr
  152     | expr . "!=" expr
  153     | expr . "<" expr
  154     | expr . ">" expr
  155     | expr . "<=" expr
  156     | expr . ">=" expr
  167     | expr .

    "MOD"  shift, and go to state 129
    "*"    shift, and go to state 138
    "/"    shift, and go to state 139
    "%"    shift, and go to state 140

    "and"     reduce using rule 144 (expr)
    "and"     [reduce using rule 167 (cond)]
    "DOWNTO"  reduce using rule 144 (expr)
    "DOWNTO"  [reduce using rule 167 (cond)]
    "MOD"     [reduce using rule 167 (cond)]
    "or"      reduce using rule 144 (expr)
    "or"      [reduce using rule 167 (cond)]
    "STEP"    reduce using rule 144 (expr)
    "STEP"    [reduce using rule 167 (cond)]
    "TO"      reduce using rule 144 (expr)
    "TO"      [reduce using rule 167 (cond)]
    "=="      reduce using rule 144 (expr)
    "=="      [reduce using rule 167 (cond)]
    ">"       reduce using rule 144 (expr)
    ">"       [reduce using rule 167 (cond)]
    "<"       reduce using rule 144 (expr)
    "<"       [reduce using rule 167 (cond)]
    "!="      reduce using rule 144 (expr)
    "!="      [reduce using rule 167 (cond)]
    ">="      reduce using rule 144 (expr)
    ">="      [reduce using rule 167 (cond)]
    "<="      reduce using rule 144 (expr)
    "<="      [reduce using rule 167 (cond)]
    "+"       reduce using rule 144 (expr)
    "+"       [reduce using rule 167 (cond)]
    "-"       reduce using rule 144 (expr)
    "-"       [reduce using rule 167 (cond)]
    "*"       [reduce using rule 167 (cond)]
    "/"       [reduce using rule 167 (cond)]
    "%"       [reduce using rule 167 (cond)]
    "AND"     reduce using rule 144 (expr)
    "AND"     [reduce using rule 167 (cond)]
    "OR"      reduce using rule 144 (expr)
    "OR"      [reduce using rule 167 (cond)]
    ";"       reduce using rule 144 (expr)
    ";"       [reduce using rule 167 (cond)]
    ")"       reduce using rule 144 (expr)
    ")"       [reduce using rule 167 (cond)]
    ":"       reduce using rule 144 (expr)
    ":"       [reduce using rule 167 (cond)]
    ","       reduce using rule 144 (expr)
    ","       [reduce using rule 167 (cond)]
    "]"       reduce using rule 144 (expr)
    "]"       [reduce using rule 167 (cond)]
    $default  reduce using rule 144 (expr)


state 127

  158 cond: "!" cond .
  160     | cond . "AND" $@33 cond
  162     | cond . "and" $@34 cond
  164     | cond . "OR" $@35 cond
  166     | cond . "or" $@36 cond
  168 expr: cond .

    "and"     reduce using rule 158 (cond)
    "and"     [reduce using rule 168 (expr)]
    "DOWNTO"  reduce using rule 158 (cond)
    "DOWNTO"  [reduce using rule 168 (expr)]
    "MOD"     reduce using rule 158 (cond)
    "MOD"     [reduce using rule 168 (expr)]
    "or"      reduce using rule 158 (cond)
    "or"      [reduce using rule 168 (expr)]
    "STEP"    reduce using rule 158 (cond)
    "STEP"    [reduce using rule 168 (expr)]
    "TO"      reduce using rule 158 (cond)
    "TO"      [reduce using rule 168 (expr)]
    "=="      reduce using rule 158 (cond)
    "=="      [reduce using rule 168 (expr)]
    ">"       reduce using rule 158 (cond)
    ">"       [reduce using rule 168 (expr)]
    "<"       reduce using rule 158 (cond)
    "<"       [reduce using rule 168 (expr)]
    "!="      reduce using rule 158 (cond)
    "!="      [reduce using rule 168 (expr)]
    ">="      reduce using rule 158 (cond)
    ">="      [reduce using rule 168 (expr)]
    "<="      reduce using rule 158 (cond)
    "<="      [reduce using rule 168 (expr)]
    "+"       reduce using rule 158 (cond)
    "+"       [reduce using rule 168 (expr)]
    "-"       reduce using rule 158 (cond)
    "-"       [reduce using rule 168 (expr)]
    "*"       reduce using rule 158 (cond)
    "*"       [reduce using rule 168 (expr)]
    "/"       reduce using rule 158 (cond)
    "/"       [reduce using rule 168 (expr)]
    "%"       reduce using rule 158 (cond)
    "%"       [reduce using rule 168 (expr)]
    "AND"     reduce using rule 158 (cond)
    "AND"     [reduce using rule 168 (expr)]
    "OR"      reduce using rule 158 (cond)
    "OR"      [reduce using rule 168 (expr)]
    ";"       reduce using rule 158 (cond)
    ";"       [reduce using rule 168 (expr)]
    ")"       reduce using rule 158 (cond)
    ")"       [reduce using rule 168 (expr)]
    ":"       reduce using rule 158 (cond)
    ":"       [reduce using rule 168 (expr)]
    ","       reduce using rule 158 (cond)
    ","       [reduce using rule 168 (expr)]
    "]"       reduce using rule 158 (cond)
    "]"       [reduce using rule 168 (expr)]
    $default  reduce using rule 158 (cond)


state 128

  140 expr: "(" expr . ")"
  145     | expr . "+" expr
  146     | expr . "-" expr
  147     | expr . "*" expr
  148     | expr . "/" expr
  149     | expr . "%" expr
  150     | expr . "MOD" expr
  151 cond: expr . "==" expr
  152     | expr . "!=" expr
  153     | expr . "<" expr
  154     | expr . ">" expr
  155     | expr . "<=" expr
  156     | expr . ">=" expr
  167     | expr .

    "MOD"  shift, and go to state 129
    "=="   shift, and go to state 130
    ">"    shift, and go to state 131
    "<"    shift, and go to state 132
    "!="   shift, and go to state 133
    ">="   shift, and go to state 134
    "<="   shift, and go to state 135
    "+"    shift, and go to state 136
    "-"    shift, and go to state 137
    "*"    shift, and go to state 138
    "/"    shift, and go to state 139
    "%"    shift, and go to state 140
    ")"    shift, and go to state 177

    "MOD"     [reduce using rule 167 (cond)]
    "=="      [reduce using rule 167 (cond)]
    ">"       [reduce using rule 167 (cond)]
    "<"       [reduce using rule 167 (cond)]
    "!="      [reduce using rule 167 (cond)]
    ">="      [reduce using rule 167 (cond)]
    "<="      [reduce using rule 167 (cond)]
    "+"       [reduce using rule 167 (cond)]
    "-"       [reduce using rule 167 (cond)]
    "*"       [reduce using rule 167 (cond)]
    "/"       [reduce using rule 167 (cond)]
    "%"       [reduce using rule 167 (cond)]
    ")"       [reduce using rule 167 (cond)]
    $default  reduce using rule 167 (cond)


state 129

  150 expr: expr "MOD" . expr

    "false"       shift, and go to state 73
    "not"         shift, and go to state 74
    "true"        shift, and go to state 75
    T_const_int   shift, and go to state 76
    T_const_real  shift, and go to state 77
    T_id          shift, and go to state 58
    T_const_char  shift, and go to state 78
    T_string      shift, and go to state 79
    "+"           shift, and go to state 80
    "-"           shift, and go to state 81
    "!"           shift, and go to state 82
    "("           shift, and go to state 83

    l_value  go to state 84
    call     go to state 85
    expr     go to state 178
    cond     go to state 87


state 130

  151 cond: expr "==" . expr

    "false"       shift, and go to state 73
    "not"         shift, and go to state 74
    "true"        shift, and go to state 75
    T_const_int   shift, and go to state 76
    T_const_real  shift, and go to state 77
    T_id          shift, and go to state 58
    T_const_char  shift, and go to state 78
    T_string      shift, and go to state 79
    "+"           shift, and go to state 80
    "-"           shift, and go to state 81
    "!"           shift, and go to state 82
    "("           shift, and go to state 83

    l_value  go to state 84
    call     go to state 85
    expr     go to state 179
    cond     go to state 87


state 131

  154 cond: expr ">" . expr

    "false"       shift, and go to state 73
    "not"         shift, and go to state 74
    "true"        shift, and go to state 75
    T_const_int   shift, and go to state 76
    T_const_real  shift, and go to state 77
    T_id          shift, and go to state 58
    T_const_char  shift, and go to state 78
    T_string      shift, and go to state 79
    "+"           shift, and go to state 80
    "-"           shift, and go to state 81
    "!"           shift, and go to state 82
    "("           shift, and go to state 83

    l_value  go to state 84
    call     go to state 85
    expr     go to state 180
    cond     go to state 87


state 132

  153 cond: expr "<" . expr

    "false"       shift, and go to state 73
    "not"         shift, and go to state 74
    "true"        shift, and go to state 75
    T_const_int   shift, and go to state 76
    T_const_real  shift, and go to state 77
    T_id          shift, and go to state 58
    T_const_char  shift, and go to state 78
    T_string      shift, and go to state 79
    "+"           shift, and go to state 80
    "-"           shift, and go to state 81
    "!"           shift, and go to state 82
    "("           shift, and go to state 83

    l_value  go to state 84
    call     go to state 85
    expr     go to state 181
    cond     go to state 87


state 133

  152 cond: expr "!=" . expr

    "false"       shift, and go to state 73
    "not"         shift, and go to state 74
    "true"        shift, and go to state 75
    T_const_int   shift, and go to state 76
    T_const_real  shift, and go to state 77
    T_id          shift, and go to state 58
    T_const_char  shift, and go to state 78
    T_string      shift, and go to state 79
    "+"           shift, and go to state 80
    "-"           shift, and go to state 81
    "!"           shift, and go to state 82
    "("           shift, and go to state 83

    l_value  go to state 84
    call     go to state 85
    expr     go to state 182
    cond     go to state 87


state 134

  156 cond: expr ">=" . expr

    "false"       shift, and go to state 73
    "not"         shift, and go to state 74
    "true"        shift, and go to state 75
    T_const_int   shift, and go to state 76
    T_const_real  shift, and go to state 77
    T_id          shift, and go to state 58
    T_const_char  shift, and go to state 78
    T_string      shift, and go to state 79
    "+"           shift, and go to state 80
    "-"           shift, and go to state 81
    "!"           shift, and go to state 82
    "("           shift, and go to state 83

    l_value  go to state 84
    call     go to state 85
    expr     go to state 183
    cond     go to state 87


state 135

  155 cond: expr "<=" . expr

    "false"       shift, and go to state 73
    "not"         shift, and go to state 74
    "true"        shift, and go to state 75
    T_const_int   shift, and go to state 76
    T_const_real  shift, and go to state 77
    T_id          shift, and go to state 58
    T_const_char  shift, and go to state 78
    T_string      shift, and go to state 79
    "+"           shift, and go to state 80
    "-"           shift, and go to state 81
    "!"           shift, and go to state 82
    "("           shift, and go to state 83

    l_value  go to state 84
    call     go to state 85
    expr     go to state 184
    cond     go to state 87


state 136

  145 expr: expr "+" . expr

    "false"       shift, and go to state 73
    "not"         shift, and go to state 74
    "true"        shift, and go to state 75
    T_const_int   shift, and go to state 76
    T_const_real  shift, and go to state 77
    T_id          shift, and go to state 58
    T_const_char  shift, and go to state 78
    T_string      shift, and go to state 79
    "+"           shift, and go to state 80
    "-"           shift, and go to state 81
    "!"           shift, and go to state 82
    "("           shift, and go to state 83

    l_value  go to state 84
    call     go to state 85
    expr     go to state 185
    cond     go to state 87


state 137

  146 expr: expr "-" . expr

    "false"       shift, and go to state 73
    "not"         shift, and go to state 74
    "true"        shift, and go to state 75
    T_const_int   shift, and go to state 76
    T_const_real  shift, and go to state 77
    T_id          shift, and go to state 58
    T_const_char  shift, and go to state 78
    T_string      shift, and go to state 79
    "+"           shift, and go to state 80
    "-"           shift, and go to state 81
    "!"           shift, and go to state 82
    "("           shift, and go to state 83

    l_value  go to state 84
    call     go to state 85
    expr     go to state 186
    cond     go to state 87


state 138

  147 expr: expr "*" . expr

    "false"       shift, and go to state 73
    "not"         shift, and go to state 74
    "true"        shift, and go to state 75
    T_const_int   shift, and go to state 76
    T_const_real  shift, and go to state 77
    T_id          shift, and go to state 58
    T_const_char  shift, and go to state 78
    T_string      shift, and go to state 79
    "+"           shift, and go to state 80
    "-"           shift, and go to state 81
    "!"           shift, and go to state 82
    "("           shift, and go to state 83

    l_value  go to state 84
    call     go to state 85
    expr     go to state 187
    cond     go to state 87


state 139

  148 expr: expr "/" . expr

    "false"       shift, and go to state 73
    "not"         shift, and go to state 74
    "true"        shift, and go to state 75
    T_const_int   shift, and go to state 76
    T_const_real  shift, and go to state 77
    T_id          shift, and go to state 58
    T_const_char  shift, and go to state 78
    T_string      shift, and go to state 79
    "+"           shift, and go to state 80
    "-"           shift, and go to state 81
    "!"           shift, and go to state 82
    "("           shift, and go to state 83

    l_value  go to state 84
    call     go to state 85
    expr     go to state 188
    cond     go to state 87


state 140

  149 expr: expr "%" . expr

    "false"       shift, and go to state 73
    "not"         shift, and go to state 74
    "true"        shift, and go to state 75
    T_const_int   shift, and go to state 76
    T_const_real  shift, and go to state 77
    T_id          shift, and go to state 58
    T_const_char  shift, and go to state 78
    T_string      shift, and go to state 79
    "+"           shift, and go to state 80
    "-"           shift, and go to state 81
    "!"           shift, and go to state 82
    "("           shift, and go to state 83

    l_value  go to state 84
    call     go to state 85
    expr     go to state 189
    cond     go to state 87


state 141

   15 var_def: type T_id "=" expr $@3 . var_def_list ";"

    ","  shift, and go to state 90

    $default  reduce using rule 24 (var_def_list)

    var_def_list  go to state 190


state 142

  162 cond: cond "and" . $@34 cond

    $default  reduce using rule 161 ($@34)

    $@34  go to state 191


state 143

  166 cond: cond "or" . $@36 cond

    $default  reduce using rule 165 ($@36)

    $@36  go to state 192


state 144

  160 cond: cond "AND" . $@33 cond

    $default  reduce using rule 159 ($@33)

    $@33  go to state 193


state 145

  164 cond: cond "OR" . $@35 cond

    $default  reduce using rule 163 ($@35)

    $@35  go to state 194


state 146

   26 var_init_list: "[" const_expr "]" . $@8 var_init_list
   27              | "[" const_expr "]" .

    "["       reduce using rule 25 ($@8)
    $default  reduce using rule 27 (var_init_list)

    $@8  go to state 195


state 147

  133 const_expr: $@32 expr .
  145 expr: expr . "+" expr
  146     | expr . "-" expr
  147     | expr . "*" expr
  148     | expr . "/" expr
  149     | expr . "%" expr
  150     | expr . "MOD" expr
  151 cond: expr . "==" expr
  152     | expr . "!=" expr
  153     | expr . "<" expr
  154     | expr . ">" expr
  155     | expr . "<=" expr
  156     | expr . ">=" expr
  167     | expr .

    "MOD"  shift, and go to state 129
    "=="   shift, and go to state 130
    ">"    shift, and go to state 131
    "<"    shift, and go to state 132
    "!="   shift, and go to state 133
    ">="   shift, and go to state 134
    "<="   shift, and go to state 135
    "+"    shift, and go to state 136
    "-"    shift, and go to state 137
    "*"    shift, and go to state 138
    "/"    shift, and go to state 139
    "%"    shift, and go to state 140

    "MOD"     [reduce using rule 167 (cond)]
    "=="      [reduce using rule 167 (cond)]
    ">"       [reduce using rule 167 (cond)]
    "<"       [reduce using rule 167 (cond)]
    "!="      [reduce using rule 167 (cond)]
    ">="      [reduce using rule 167 (cond)]
    "<="      [reduce using rule 167 (cond)]
    "+"       [reduce using rule 167 (cond)]
    "-"       [reduce using rule 167 (cond)]
    "*"       [reduce using rule 167 (cond)]
    "/"       [reduce using rule 167 (cond)]
    "%"       [reduce using rule 167 (cond)]
    ";"       reduce using rule 133 (const_expr)
    ";"       [reduce using rule 167 (cond)]
    ","       reduce using rule 133 (const_expr)
    ","       [reduce using rule 167 (cond)]
    "]"       reduce using rule 133 (const_expr)
    "]"       [reduce using rule 167 (cond)]
    $default  reduce using rule 167 (cond)


state 148

   19 var_def_list: "," T_id . $@5 var_def_list
   21             | "," T_id . "=" expr $@6 var_def_list
   23             | "," T_id . var_init_list $@7 var_def_list

    "="  shift, and go to state 196
    "["  shift, and go to state 41

    $default  reduce using rule 18 ($@5)

    $@5            go to state 197
    var_init_list  go to state 198


state 149

   13 var_def: type T_id $@2 var_def_list ";" .

    $default  reduce using rule 13 (var_def)


state 150

   17 var_def: type T_id var_init_list $@4 var_def_list . ";"

    ";"  shift, and go to state 199


state 151

   10 const_def_list: "," . T_id "=" const_expr const_def_list

    T_id  shift, and go to state 200


state 152

    9 const_def: "const" type T_id "=" const_expr const_def_list . ";"

    ";"  shift, and go to state 201


state 153

   99 stmt: T_do $@26 stmt . $@27 T_while $@28 "(" cond ")" ";"

    $default  reduce using rule 97 ($@27)

    $@27  go to state 202


state 154

   95 stmt: T_FOR $@24 "(" . T_id "," range $@25 ")" stmt

    T_id  shift, and go to state 203


state 155

   86 stmt: "if" "(" cond . ")" $@19 stmt
   89     | "if" "(" cond . ")" $@20 stmt "else" $@21 stmt
  160 cond: cond . "AND" $@33 cond
  162     | cond . "and" $@34 cond
  164     | cond . "OR" $@35 cond
  166     | cond . "or" $@36 cond
  168 expr: cond .

    "and"  shift, and go to state 142
    "or"   shift, and go to state 143
    "AND"  shift, and go to state 144
    "OR"   shift, and go to state 145
    ")"    shift, and go to state 204

    "and"     [reduce using rule 168 (expr)]
    "or"      [reduce using rule 168 (expr)]
    "AND"     [reduce using rule 168 (expr)]
    "OR"      [reduce using rule 168 (expr)]
    ")"       [reduce using rule 168 (expr)]
    $default  reduce using rule 168 (expr)


state 156

  104 stmt: "return" expr ";" .

    $default  reduce using rule 104 (stmt)


state 157

  101 stmt: "switch" "(" expr . $@29 ")" "{" switch_cases "}"
  145 expr: expr . "+" expr
  146     | expr . "-" expr
  147     | expr . "*" expr
  148     | expr . "/" expr
  149     | expr . "%" expr
  150     | expr . "MOD" expr
  151 cond: expr . "==" expr
  152     | expr . "!=" expr
  153     | expr . "<" expr
  154     | expr . ">" expr
  155     | expr . "<=" expr
  156     | expr . ">=" expr
  167     | expr .

    "MOD"  shift, and go to state 129
    "=="   shift, and go to state 130
    ">"    shift, and go to state 131
    "<"    shift, and go to state 132
    "!="   shift, and go to state 133
    ">="   shift, and go to state 134
    "<="   shift, and go to state 135
    "+"    shift, and go to state 136
    "-"    shift, and go to state 137
    "*"    shift, and go to state 138
    "/"    shift, and go to state 139
    "%"    shift, and go to state 140

    "MOD"     [reduce using rule 167 (cond)]
    "=="      [reduce using rule 167 (cond)]
    ">"       [reduce using rule 167 (cond)]
    "<"       [reduce using rule 167 (cond)]
    "!="      [reduce using rule 167 (cond)]
    ">="      [reduce using rule 167 (cond)]
    "<="      [reduce using rule 167 (cond)]
    "+"       [reduce using rule 167 (cond)]
    "-"       [reduce using rule 167 (cond)]
    "*"       [reduce using rule 167 (cond)]
    "/"       [reduce using rule 167 (cond)]
    "%"       [reduce using rule 167 (cond)]
    ")"       reduce using rule 100 ($@29)
    ")"       [reduce using rule 167 (cond)]
    $default  reduce using rule 167 (cond)

    $@29  go to state 205


state 158

   92 stmt: T_while $@22 "(" . cond ")" $@23 stmt

    "false"       shift, and go to state 73
    "not"         shift, and go to state 74
    "true"        shift, and go to state 75
    T_const_int   shift, and go to state 76
    T_const_real  shift, and go to state 77
    T_id          shift, and go to state 58
    T_const_char  shift, and go to state 78
    T_string      shift, and go to state 79
    "+"           shift, and go to state 80
    "-"           shift, and go to state 81
    "!"           shift, and go to state 82
    "("           shift, and go to state 83

    l_value  go to state 84
    call     go to state 85
    expr     go to state 123
    cond     go to state 206


state 159

   54 l_value: T_id $@11 "[" . expr "]" l_value_list

    "false"       shift, and go to state 73
    "not"         shift, and go to state 74
    "true"        shift, and go to state 75
    T_const_int   shift, and go to state 76
    T_const_real  shift, and go to state 77
    T_id          shift, and go to state 58
    T_const_char  shift, and go to state 78
    T_string      shift, and go to state 79
    "+"           shift, and go to state 80
    "-"           shift, and go to state 81
    "!"           shift, and go to state 82
    "("           shift, and go to state 83

    l_value  go to state 84
    call     go to state 85
    expr     go to state 207
    cond     go to state 87


state 160

   59 call: T_id $@12 "(" . $@13 call_if ")"

    $default  reduce using rule 58 ($@13)

    $@13  go to state 208


state 161

   82 stmt: l_value "++" ";" .

    $default  reduce using rule 82 (stmt)


state 162

   83 stmt: l_value "--" ";" .

    $default  reduce using rule 83 (stmt)


state 163

   76 stmt: l_value "=" expr . ";"
  145 expr: expr . "+" expr
  146     | expr . "-" expr
  147     | expr . "*" expr
  148     | expr . "/" expr
  149     | expr . "%" expr
  150     | expr . "MOD" expr
  151 cond: expr . "==" expr
  152     | expr . "!=" expr
  153     | expr . "<" expr
  154     | expr . ">" expr
  155     | expr . "<=" expr
  156     | expr . ">=" expr
  167     | expr .

    "MOD"  shift, and go to state 129
    "=="   shift, and go to state 130
    ">"    shift, and go to state 131
    "<"    shift, and go to state 132
    "!="   shift, and go to state 133
    ">="   shift, and go to state 134
    "<="   shift, and go to state 135
    "+"    shift, and go to state 136
    "-"    shift, and go to state 137
    "*"    shift, and go to state 138
    "/"    shift, and go to state 139
    "%"    shift, and go to state 140
    ";"    shift, and go to state 209

    "MOD"     [reduce using rule 167 (cond)]
    "=="      [reduce using rule 167 (cond)]
    ">"       [reduce using rule 167 (cond)]
    "<"       [reduce using rule 167 (cond)]
    "!="      [reduce using rule 167 (cond)]
    ">="      [reduce using rule 167 (cond)]
    "<="      [reduce using rule 167 (cond)]
    "+"       [reduce using rule 167 (cond)]
    "-"       [reduce using rule 167 (cond)]
    "*"       [reduce using rule 167 (cond)]
    "/"       [reduce using rule 167 (cond)]
    "%"       [reduce using rule 167 (cond)]
    ";"       [reduce using rule 167 (cond)]
    $default  reduce using rule 167 (cond)


state 164

   77 stmt: l_value "+=" expr . ";"
  145 expr: expr . "+" expr
  146     | expr . "-" expr
  147     | expr . "*" expr
  148     | expr . "/" expr
  149     | expr . "%" expr
  150     | expr . "MOD" expr
  151 cond: expr . "==" expr
  152     | expr . "!=" expr
  153     | expr . "<" expr
  154     | expr . ">" expr
  155     | expr . "<=" expr
  156     | expr . ">=" expr
  167     | expr .

    "MOD"  shift, and go to state 129
    "=="   shift, and go to state 130
    ">"    shift, and go to state 131
    "<"    shift, and go to state 132
    "!="   shift, and go to state 133
    ">="   shift, and go to state 134
    "<="   shift, and go to state 135
    "+"    shift, and go to state 136
    "-"    shift, and go to state 137
    "*"    shift, and go to state 138
    "/"    shift, and go to state 139
    "%"    shift, and go to state 140
    ";"    shift, and go to state 210

    "MOD"     [reduce using rule 167 (cond)]
    "=="      [reduce using rule 167 (cond)]
    ">"       [reduce using rule 167 (cond)]
    "<"       [reduce using rule 167 (cond)]
    "!="      [reduce using rule 167 (cond)]
    ">="      [reduce using rule 167 (cond)]
    "<="      [reduce using rule 167 (cond)]
    "+"       [reduce using rule 167 (cond)]
    "-"       [reduce using rule 167 (cond)]
    "*"       [reduce using rule 167 (cond)]
    "/"       [reduce using rule 167 (cond)]
    "%"       [reduce using rule 167 (cond)]
    ";"       [reduce using rule 167 (cond)]
    $default  reduce using rule 167 (cond)


state 165

   78 stmt: l_value "-=" expr . ";"
  145 expr: expr . "+" expr
  146     | expr . "-" expr
  147     | expr . "*" expr
  148     | expr . "/" expr
  149     | expr . "%" expr
  150     | expr . "MOD" expr
  151 cond: expr . "==" expr
  152     | expr . "!=" expr
  153     | expr . "<" expr
  154     | expr . ">" expr
  155     | expr . "<=" expr
  156     | expr . ">=" expr
  167     | expr .

    "MOD"  shift, and go to state 129
    "=="   shift, and go to state 130
    ">"    shift, and go to state 131
    "<"    shift, and go to state 132
    "!="   shift, and go to state 133
    ">="   shift, and go to state 134
    "<="   shift, and go to state 135
    "+"    shift, and go to state 136
    "-"    shift, and go to state 137
    "*"    shift, and go to state 138
    "/"    shift, and go to state 139
    "%"    shift, and go to state 140
    ";"    shift, and go to state 211

    "MOD"     [reduce using rule 167 (cond)]
    "=="      [reduce using rule 167 (cond)]
    ">"       [reduce using rule 167 (cond)]
    "<"       [reduce using rule 167 (cond)]
    "!="      [reduce using rule 167 (cond)]
    ">="      [reduce using rule 167 (cond)]
    "<="      [reduce using rule 167 (cond)]
    "+"       [reduce using rule 167 (cond)]
    "-"       [reduce using rule 167 (cond)]
    "*"       [reduce using rule 167 (cond)]
    "/"       [reduce using rule 167 (cond)]
    "%"       [reduce using rule 167 (cond)]
    ";"       [reduce using rule 167 (cond)]
    $default  reduce using rule 167 (cond)


state 166

   79 stmt: l_value "*=" expr . ";"
  145 expr: expr . "+" expr
  146     | expr . "-" expr
  147     | expr . "*" expr
  148     | expr . "/" expr
  149     | expr . "%" expr
  150     | expr . "MOD" expr
  151 cond: expr . "==" expr
  152     | expr . "!=" expr
  153     | expr . "<" expr
  154     | expr . ">" expr
  155     | expr . "<=" expr
  156     | expr . ">=" expr
  167     | expr .

    "MOD"  shift, and go to state 129
    "=="   shift, and go to state 130
    ">"    shift, and go to state 131
    "<"    shift, and go to state 132
    "!="   shift, and go to state 133
    ">="   shift, and go to state 134
    "<="   shift, and go to state 135
    "+"    shift, and go to state 136
    "-"    shift, and go to state 137
    "*"    shift, and go to state 138
    "/"    shift, and go to state 139
    "%"    shift, and go to state 140
    ";"    shift, and go to state 212

    "MOD"     [reduce using rule 167 (cond)]
    "=="      [reduce using rule 167 (cond)]
    ">"       [reduce using rule 167 (cond)]
    "<"       [reduce using rule 167 (cond)]
    "!="      [reduce using rule 167 (cond)]
    ">="      [reduce using rule 167 (cond)]
    "<="      [reduce using rule 167 (cond)]
    "+"       [reduce using rule 167 (cond)]
    "-"       [reduce using rule 167 (cond)]
    "*"       [reduce using rule 167 (cond)]
    "/"       [reduce using rule 167 (cond)]
    "%"       [reduce using rule 167 (cond)]
    ";"       [reduce using rule 167 (cond)]
    $default  reduce using rule 167 (cond)


state 167

   80 stmt: l_value "/=" expr . ";"
  145 expr: expr . "+" expr
  146     | expr . "-" expr
  147     | expr . "*" expr
  148     | expr . "/" expr
  149     | expr . "%" expr
  150     | expr . "MOD" expr
  151 cond: expr . "==" expr
  152     | expr . "!=" expr
  153     | expr . "<" expr
  154     | expr . ">" expr
  155     | expr . "<=" expr
  156     | expr . ">=" expr
  167     | expr .

    "MOD"  shift, and go to state 129
    "=="   shift, and go to state 130
    ">"    shift, and go to state 131
    "<"    shift, and go to state 132
    "!="   shift, and go to state 133
    ">="   shift, and go to state 134
    "<="   shift, and go to state 135
    "+"    shift, and go to state 136
    "-"    shift, and go to state 137
    "*"    shift, and go to state 138
    "/"    shift, and go to state 139
    "%"    shift, and go to state 140
    ";"    shift, and go to state 213

    "MOD"     [reduce using rule 167 (cond)]
    "=="      [reduce using rule 167 (cond)]
    ">"       [reduce using rule 167 (cond)]
    "<"       [reduce using rule 167 (cond)]
    "!="      [reduce using rule 167 (cond)]
    ">="      [reduce using rule 167 (cond)]
    "<="      [reduce using rule 167 (cond)]
    "+"       [reduce using rule 167 (cond)]
    "-"       [reduce using rule 167 (cond)]
    "*"       [reduce using rule 167 (cond)]
    "/"       [reduce using rule 167 (cond)]
    "%"       [reduce using rule 167 (cond)]
    ";"       [reduce using rule 167 (cond)]
    $default  reduce using rule 167 (cond)


state 168

   81 stmt: l_value "%=" expr . ";"
  145 expr: expr . "+" expr
  146     | expr . "-" expr
  147     | expr . "*" expr
  148     | expr . "/" expr
  149     | expr . "%" expr
  150     | expr . "MOD" expr
  151 cond: expr . "==" expr
  152     | expr . "!=" expr
  153     | expr . "<" expr
  154     | expr . ">" expr
  155     | expr . "<=" expr
  156     | expr . ">=" expr
  167     | expr .

    "MOD"  shift, and go to state 129
    "=="   shift, and go to state 130
    ">"    shift, and go to state 131
    "<"    shift, and go to state 132
    "!="   shift, and go to state 133
    ">="   shift, and go to state 134
    "<="   shift, and go to state 135
    "+"    shift, and go to state 136
    "-"    shift, and go to state 137
    "*"    shift, and go to state 138
    "/"    shift, and go to state 139
    "%"    shift, and go to state 140
    ";"    shift, and go to state 214

    "MOD"     [reduce using rule 167 (cond)]
    "=="      [reduce using rule 167 (cond)]
    ">"       [reduce using rule 167 (cond)]
    "<"       [reduce using rule 167 (cond)]
    "!="      [reduce using rule 167 (cond)]
    ">="      [reduce using rule 167 (cond)]
    "<="      [reduce using rule 167 (cond)]
    "+"       [reduce using rule 167 (cond)]
    "-"       [reduce using rule 167 (cond)]
    "*"       [reduce using rule 167 (cond)]
    "/"       [reduce using rule 167 (cond)]
    "%"       [reduce using rule 167 (cond)]
    ";"       [reduce using rule 167 (cond)]
    $default  reduce using rule 167 (cond)


state 169

   71 block_list: stmt $@18 block_list .

    $default  reduce using rule 71 (block_list)


state 170

  126 format: "FORM" . "(" expr "," expr "," expr ")"
  127       | "FORM" . "(" expr "," expr ")"

    "("  shift, and go to state 215


state 171

  107 stmt: write "(" ")" . ";"

    ";"  shift, and go to state 216


state 172

  108 stmt: write "(" format . format_more ")" ";"

    ","  shift, and go to state 217

    $default  reduce using rule 124 (format_more)

    format_more  go to state 218


state 173

  125 format: expr .
  145 expr: expr . "+" expr
  146     | expr . "-" expr
  147     | expr . "*" expr
  148     | expr . "/" expr
  149     | expr . "%" expr
  150     | expr . "MOD" expr
  151 cond: expr . "==" expr
  152     | expr . "!=" expr
  153     | expr . "<" expr
  154     | expr . ">" expr
  155     | expr . "<=" expr
  156     | expr . ">=" expr
  167     | expr .

    "MOD"  shift, and go to state 129
    "=="   shift, and go to state 130
    ">"    shift, and go to state 131
    "<"    shift, and go to state 132
    "!="   shift, and go to state 133
    ">="   shift, and go to state 134
    "<="   shift, and go to state 135
    "+"    shift, and go to state 136
    "-"    shift, and go to state 137
    "*"    shift, and go to state 138
    "/"    shift, and go to state 139
    "%"    shift, and go to state 140

    "MOD"     [reduce using rule 167 (cond)]
    "=="      [reduce using rule 167 (cond)]
    ">"       [reduce using rule 167 (cond)]
    "<"       [reduce using rule 167 (cond)]
    "!="      [reduce using rule 167 (cond)]
    ">="      [reduce using rule 167 (cond)]
    "<="      [reduce using rule 167 (cond)]
    "+"       [reduce using rule 167 (cond)]
    "-"       [reduce using rule 167 (cond)]
    "*"       [reduce using rule 167 (cond)]
    "/"       [reduce using rule 167 (cond)]
    "%"       [reduce using rule 167 (cond)]
    ")"       reduce using rule 125 (format)
    ")"       [reduce using rule 167 (cond)]
    ","       reduce using rule 125 (format)
    ","       [reduce using rule 167 (cond)]
    $default  reduce using rule 167 (cond)


state 174

   40 formal_list: "[" formal_if2 . "]" formal_list
   41            | "[" formal_if2 . "]"

    "]"  shift, and go to state 219


state 175

   38 formal_if2: const_expr .

    $default  reduce using rule 38 (formal_if2)


state 176

   33 routine_header_if_list: "," type . formal routine_header_if_list

    T_id  shift, and go to state 70
    "&"   shift, and go to state 71

    formal  go to state 220


state 177

  140 expr: "(" expr ")" .

    $default  reduce using rule 140 (expr)


state 178

  145 expr: expr . "+" expr
  146     | expr . "-" expr
  147     | expr . "*" expr
  148     | expr . "/" expr
  149     | expr . "%" expr
  150     | expr . "MOD" expr
  150     | expr "MOD" expr .
  151 cond: expr . "==" expr
  152     | expr . "!=" expr
  153     | expr . "<" expr
  154     | expr . ">" expr
  155     | expr . "<=" expr
  156     | expr . ">=" expr
  167     | expr .

    "and"     reduce using rule 150 (expr)
    "and"     [reduce using rule 167 (cond)]
    "DOWNTO"  reduce using rule 150 (expr)
    "DOWNTO"  [reduce using rule 167 (cond)]
    "MOD"     reduce using rule 150 (expr)
    "MOD"     [reduce using rule 167 (cond)]
    "or"      reduce using rule 150 (expr)
    "or"      [reduce using rule 167 (cond)]
    "STEP"    reduce using rule 150 (expr)
    "STEP"    [reduce using rule 167 (cond)]
    "TO"      reduce using rule 150 (expr)
    "TO"      [reduce using rule 167 (cond)]
    "=="      reduce using rule 150 (expr)
    "=="      [reduce using rule 167 (cond)]
    ">"       reduce using rule 150 (expr)
    ">"       [reduce using rule 167 (cond)]
    "<"       reduce using rule 150 (expr)
    "<"       [reduce using rule 167 (cond)]
    "!="      reduce using rule 150 (expr)
    "!="      [reduce using rule 167 (cond)]
    ">="      reduce using rule 150 (expr)
    ">="      [reduce using rule 167 (cond)]
    "<="      reduce using rule 150 (expr)
    "<="      [reduce using rule 167 (cond)]
    "+"       reduce using rule 150 (expr)
    "+"       [reduce using rule 167 (cond)]
    "-"       reduce using rule 150 (expr)
    "-"       [reduce using rule 167 (cond)]
    "*"       reduce using rule 150 (expr)
    "*"       [reduce using rule 167 (cond)]
    "/"       reduce using rule 150 (expr)
    "/"       [reduce using rule 167 (cond)]
    "%"       reduce using rule 150 (expr)
    "%"       [reduce using rule 167 (cond)]
    "AND"     reduce using rule 150 (expr)
    "AND"     [reduce using rule 167 (cond)]
    "OR"      reduce using rule 150 (expr)
    "OR"      [reduce using rule 167 (cond)]
    ";"       reduce using rule 150 (expr)
    ";"       [reduce using rule 167 (cond)]
    ")"       reduce using rule 150 (expr)
    ")"       [reduce using rule 167 (cond)]
    ":"       reduce using rule 150 (expr)
    ":"       [reduce using rule 167 (cond)]
    ","       reduce using rule 150 (expr)
    ","       [reduce using rule 167 (cond)]
    "]"       reduce using rule 150 (expr)
    "]"       [reduce using rule 167 (cond)]
    $default  reduce using rule 150 (expr)


state 179

  145 expr: expr . "+" expr
  146     | expr . "-" expr
  147     | expr . "*" expr
  148     | expr . "/" expr
  149     | expr . "%" expr
  150     | expr . "MOD" expr
  151 cond: expr . "==" expr
  151     | expr "==" expr .
  152     | expr . "!=" expr
  153     | expr . "<" expr
  154     | expr . ">" expr
  155     | expr . "<=" expr
  156     | expr . ">=" expr
  167     | expr .

    "MOD"  shift, and go to state 129
    ">"    shift, and go to state 131
    "<"    shift, and go to state 132
    ">="   shift, and go to state 134
    "<="   shift, and go to state 135
    "+"    shift, and go to state 136
    "-"    shift, and go to state 137
    "*"    shift, and go to state 138
    "/"    shift, and go to state 139
    "%"    shift, and go to state 140

    "and"     reduce using rule 151 (cond)
    "and"     [reduce using rule 167 (cond)]
    "DOWNTO"  reduce using rule 151 (cond)
    "DOWNTO"  [reduce using rule 167 (cond)]
    "MOD"     [reduce using rule 167 (cond)]
    "or"      reduce using rule 151 (cond)
    "or"      [reduce using rule 167 (cond)]
    "STEP"    reduce using rule 151 (cond)
    "STEP"    [reduce using rule 167 (cond)]
    "TO"      reduce using rule 151 (cond)
    "TO"      [reduce using rule 167 (cond)]
    "=="      reduce using rule 151 (cond)
    "=="      [reduce using rule 167 (cond)]
    ">"       [reduce using rule 167 (cond)]
    "<"       [reduce using rule 167 (cond)]
    "!="      reduce using rule 151 (cond)
    "!="      [reduce using rule 167 (cond)]
    ">="      [reduce using rule 167 (cond)]
    "<="      [reduce using rule 167 (cond)]
    "+"       [reduce using rule 167 (cond)]
    "-"       [reduce using rule 167 (cond)]
    "*"       [reduce using rule 167 (cond)]
    "/"       [reduce using rule 167 (cond)]
    "%"       [reduce using rule 167 (cond)]
    "AND"     reduce using rule 151 (cond)
    "AND"     [reduce using rule 167 (cond)]
    "OR"      reduce using rule 151 (cond)
    "OR"      [reduce using rule 167 (cond)]
    ";"       reduce using rule 151 (cond)
    ";"       [reduce using rule 167 (cond)]
    ")"       reduce using rule 151 (cond)
    ")"       [reduce using rule 167 (cond)]
    ":"       reduce using rule 151 (cond)
    ":"       [reduce using rule 167 (cond)]
    ","       reduce using rule 151 (cond)
    ","       [reduce using rule 167 (cond)]
    "]"       reduce using rule 151 (cond)
    "]"       [reduce using rule 167 (cond)]
    $default  reduce using rule 151 (cond)


state 180

  145 expr: expr . "+" expr
  146     | expr . "-" expr
  147     | expr . "*" expr
  148     | expr . "/" expr
  149     | expr . "%" expr
  150     | expr . "MOD" expr
  151 cond: expr . "==" expr
  152     | expr . "!=" expr
  153     | expr . "<" expr
  154     | expr . ">" expr
  154     | expr ">" expr .
  155     | expr . "<=" expr
  156     | expr . ">=" expr
  167     | expr .

    "MOD"  shift, and go to state 129
    "+"    shift, and go to state 136
    "-"    shift, and go to state 137
    "*"    shift, and go to state 138
    "/"    shift, and go to state 139
    "%"    shift, and go to state 140

    "and"     reduce using rule 154 (cond)
    "and"     [reduce using rule 167 (cond)]
    "DOWNTO"  reduce using rule 154 (cond)
    "DOWNTO"  [reduce using rule 167 (cond)]
    "MOD"     [reduce using rule 167 (cond)]
    "or"      reduce using rule 154 (cond)
    "or"      [reduce using rule 167 (cond)]
    "STEP"    reduce using rule 154 (cond)
    "STEP"    [reduce using rule 167 (cond)]
    "TO"      reduce using rule 154 (cond)
    "TO"      [reduce using rule 167 (cond)]
    "=="      reduce using rule 154 (cond)
    "=="      [reduce using rule 167 (cond)]
    ">"       reduce using rule 154 (cond)
    ">"       [reduce using rule 167 (cond)]
    "<"       reduce using rule 154 (cond)
    "<"       [reduce using rule 167 (cond)]
    "!="      reduce using rule 154 (cond)
    "!="      [reduce using rule 167 (cond)]
    ">="      reduce using rule 154 (cond)
    ">="      [reduce using rule 167 (cond)]
    "<="      reduce using rule 154 (cond)
    "<="      [reduce using rule 167 (cond)]
    "+"       [reduce using rule 167 (cond)]
    "-"       [reduce using rule 167 (cond)]
    "*"       [reduce using rule 167 (cond)]
    "/"       [reduce using rule 167 (cond)]
    "%"       [reduce using rule 167 (cond)]
    "AND"     reduce using rule 154 (cond)
    "AND"     [reduce using rule 167 (cond)]
    "OR"      reduce using rule 154 (cond)
    "OR"      [reduce using rule 167 (cond)]
    ";"       reduce using rule 154 (cond)
    ";"       [reduce using rule 167 (cond)]
    ")"       reduce using rule 154 (cond)
    ")"       [reduce using rule 167 (cond)]
    ":"       reduce using rule 154 (cond)
    ":"       [reduce using rule 167 (cond)]
    ","       reduce using rule 154 (cond)
    ","       [reduce using rule 167 (cond)]
    "]"       reduce using rule 154 (cond)
    "]"       [reduce using rule 167 (cond)]
    $default  reduce using rule 154 (cond)


state 181

  145 expr: expr . "+" expr
  146     | expr . "-" expr
  147     | expr . "*" expr
  148     | expr . "/" expr
  149     | expr . "%" expr
  150     | expr . "MOD" expr
  151 cond: expr . "==" expr
  152     | expr . "!=" expr
  153     | expr . "<" expr
  153     | expr "<" expr .
  154     | expr . ">" expr
  155     | expr . "<=" expr
  156     | expr . ">=" expr
  167     | expr .

    "MOD"  shift, and go to state 129
    "+"    shift, and go to state 136
    "-"    shift, and go to state 137
    "*"    shift, and go to state 138
    "/"    shift, and go to state 139
    "%"    shift, and go to state 140

    "and"     reduce using rule 153 (cond)
    "and"     [reduce using rule 167 (cond)]
    "DOWNTO"  reduce using rule 153 (cond)
    "DOWNTO"  [reduce using rule 167 (cond)]
    "MOD"     [reduce using rule 167 (cond)]
    "or"      reduce using rule 153 (cond)
    "or"      [reduce using rule 167 (cond)]
    "STEP"    reduce using rule 153 (cond)
    "STEP"    [reduce using rule 167 (cond)]
    "TO"      reduce using rule 153 (cond)
    "TO"      [reduce using rule 167 (cond)]
    "=="      reduce using rule 153 (cond)
    "=="      [reduce using rule 167 (cond)]
    ">"       reduce using rule 153 (cond)
    ">"       [reduce using rule 167 (cond)]
    "<"       reduce using rule 153 (cond)
    "<"       [reduce using rule 167 (cond)]
    "!="      reduce using rule 153 (cond)
    "!="      [reduce using rule 167 (cond)]
    ">="      reduce using rule 153 (cond)
    ">="      [reduce using rule 167 (cond)]
    "<="      reduce using rule 153 (cond)
    "<="      [reduce using rule 167 (cond)]
    "+"       [reduce using rule 167 (cond)]
    "-"       [reduce using rule 167 (cond)]
    "*"       [reduce using rule 167 (cond)]
    "/"       [reduce using rule 167 (cond)]
    "%"       [reduce using rule 167 (cond)]
    "AND"     reduce using rule 153 (cond)
    "AND"     [reduce using rule 167 (cond)]
    "OR"      reduce using rule 153 (cond)
    "OR"      [reduce using rule 167 (cond)]
    ";"       reduce using rule 153 (cond)
    ";"       [reduce using rule 167 (cond)]
    ")"       reduce using rule 153 (cond)
    ")"       [reduce using rule 167 (cond)]
    ":"       reduce using rule 153 (cond)
    ":"       [reduce using rule 167 (cond)]
    ","       reduce using rule 153 (cond)
    ","       [reduce using rule 167 (cond)]
    "]"       reduce using rule 153 (cond)
    "]"       [reduce using rule 167 (cond)]
    $default  reduce using rule 153 (cond)


state 182

  145 expr: expr . "+" expr
  146     | expr . "-" expr
  147     | expr . "*" expr
  148     | expr . "/" expr
  149     | expr . "%" expr
  150     | expr . "MOD" expr
  151 cond: expr . "==" expr
  152     | expr . "!=" expr
  152     | expr "!=" expr .
  153     | expr . "<" expr
  154     | expr . ">" expr
  155     | expr . "<=" expr
  156     | expr . ">=" expr
  167     | expr .

    "MOD"  shift, and go to state 129
    ">"    shift, and go to state 131
    "<"    shift, and go to state 132
    ">="   shift, and go to state 134
    "<="   shift, and go to state 135
    "+"    shift, and go to state 136
    "-"    shift, and go to state 137
    "*"    shift, and go to state 138
    "/"    shift, and go to state 139
    "%"    shift, and go to state 140

    "and"     reduce using rule 152 (cond)
    "and"     [reduce using rule 167 (cond)]
    "DOWNTO"  reduce using rule 152 (cond)
    "DOWNTO"  [reduce using rule 167 (cond)]
    "MOD"     [reduce using rule 167 (cond)]
    "or"      reduce using rule 152 (cond)
    "or"      [reduce using rule 167 (cond)]
    "STEP"    reduce using rule 152 (cond)
    "STEP"    [reduce using rule 167 (cond)]
    "TO"      reduce using rule 152 (cond)
    "TO"      [reduce using rule 167 (cond)]
    "=="      reduce using rule 152 (cond)
    "=="      [reduce using rule 167 (cond)]
    ">"       [reduce using rule 167 (cond)]
    "<"       [reduce using rule 167 (cond)]
    "!="      reduce using rule 152 (cond)
    "!="      [reduce using rule 167 (cond)]
    ">="      [reduce using rule 167 (cond)]
    "<="      [reduce using rule 167 (cond)]
    "+"       [reduce using rule 167 (cond)]
    "-"       [reduce using rule 167 (cond)]
    "*"       [reduce using rule 167 (cond)]
    "/"       [reduce using rule 167 (cond)]
    "%"       [reduce using rule 167 (cond)]
    "AND"     reduce using rule 152 (cond)
    "AND"     [reduce using rule 167 (cond)]
    "OR"      reduce using rule 152 (cond)
    "OR"      [reduce using rule 167 (cond)]
    ";"       reduce using rule 152 (cond)
    ";"       [reduce using rule 167 (cond)]
    ")"       reduce using rule 152 (cond)
    ")"       [reduce using rule 167 (cond)]
    ":"       reduce using rule 152 (cond)
    ":"       [reduce using rule 167 (cond)]
    ","       reduce using rule 152 (cond)
    ","       [reduce using rule 167 (cond)]
    "]"       reduce using rule 152 (cond)
    "]"       [reduce using rule 167 (cond)]
    $default  reduce using rule 152 (cond)


state 183

  145 expr: expr . "+" expr
  146     | expr . "-" expr
  147     | expr . "*" expr
  148     | expr . "/" expr
  149     | expr . "%" expr
  150     | expr . "MOD" expr
  151 cond: expr . "==" expr
  152     | expr . "!=" expr
  153     | expr . "<" expr
  154     | expr . ">" expr
  155     | expr . "<=" expr
  156     | expr . ">=" expr
  156     | expr ">=" expr .
  167     | expr .

    "MOD"  shift, and go to state 129
    "+"    shift, and go to state 136
    "-"    shift, and go to state 137
    "*"    shift, and go to state 138
    "/"    shift, and go to state 139
    "%"    shift, and go to state 140

    "and"     reduce using rule 156 (cond)
    "and"     [reduce using rule 167 (cond)]
    "DOWNTO"  reduce using rule 156 (cond)
    "DOWNTO"  [reduce using rule 167 (cond)]
    "MOD"     [reduce using rule 167 (cond)]
    "or"      reduce using rule 156 (cond)
    "or"      [reduce using rule 167 (cond)]
    "STEP"    reduce using rule 156 (cond)
    "STEP"    [reduce using rule 167 (cond)]
    "TO"      reduce using rule 156 (cond)
    "TO"      [reduce using rule 167 (cond)]
    "=="      reduce using rule 156 (cond)
    "=="      [reduce using rule 167 (cond)]
    ">"       reduce using rule 156 (cond)
    ">"       [reduce using rule 167 (cond)]
    "<"       reduce using rule 156 (cond)
    "<"       [reduce using rule 167 (cond)]
    "!="      reduce using rule 156 (cond)
    "!="      [reduce using rule 167 (cond)]
    ">="      reduce using rule 156 (cond)
    ">="      [reduce using rule 167 (cond)]
    "<="      reduce using rule 156 (cond)
    "<="      [reduce using rule 167 (cond)]
    "+"       [reduce using rule 167 (cond)]
    "-"       [reduce using rule 167 (cond)]
    "*"       [reduce using rule 167 (cond)]
    "/"       [reduce using rule 167 (cond)]
    "%"       [reduce using rule 167 (cond)]
    "AND"     reduce using rule 156 (cond)
    "AND"     [reduce using rule 167 (cond)]
    "OR"      reduce using rule 156 (cond)
    "OR"      [reduce using rule 167 (cond)]
    ";"       reduce using rule 156 (cond)
    ";"       [reduce using rule 167 (cond)]
    ")"       reduce using rule 156 (cond)
    ")"       [reduce using rule 167 (cond)]
    ":"       reduce using rule 156 (cond)
    ":"       [reduce using rule 167 (cond)]
    ","       reduce using rule 156 (cond)
    ","       [reduce using rule 167 (cond)]
    "]"       reduce using rule 156 (cond)
    "]"       [reduce using rule 167 (cond)]
    $default  reduce using rule 156 (cond)


state 184

  145 expr: expr . "+" expr
  146     | expr . "-" expr
  147     | expr . "*" expr
  148     | expr . "/" expr
  149     | expr . "%" expr
  150     | expr . "MOD" expr
  151 cond: expr . "==" expr
  152     | expr . "!=" expr
  153     | expr . "<" expr
  154     | expr . ">" expr
  155     | expr . "<=" expr
  155     | expr "<=" expr .
  156     | expr . ">=" expr
  167     | expr .

    "MOD"  shift, and go to state 129
    "+"    shift, and go to state 136
    "-"    shift, and go to state 137
    "*"    shift, and go to state 138
    "/"    shift, and go to state 139
    "%"    shift, and go to state 140

    "and"     reduce using rule 155 (cond)
    "and"     [reduce using rule 167 (cond)]
    "DOWNTO"  reduce using rule 155 (cond)
    "DOWNTO"  [reduce using rule 167 (cond)]
    "MOD"     [reduce using rule 167 (cond)]
    "or"      reduce using rule 155 (cond)
    "or"      [reduce using rule 167 (cond)]
    "STEP"    reduce using rule 155 (cond)
    "STEP"    [reduce using rule 167 (cond)]
    "TO"      reduce using rule 155 (cond)
    "TO"      [reduce using rule 167 (cond)]
    "=="      reduce using rule 155 (cond)
    "=="      [reduce using rule 167 (cond)]
    ">"       reduce using rule 155 (cond)
    ">"       [reduce using rule 167 (cond)]
    "<"       reduce using rule 155 (cond)
    "<"       [reduce using rule 167 (cond)]
    "!="      reduce using rule 155 (cond)
    "!="      [reduce using rule 167 (cond)]
    ">="      reduce using rule 155 (cond)
    ">="      [reduce using rule 167 (cond)]
    "<="      reduce using rule 155 (cond)
    "<="      [reduce using rule 167 (cond)]
    "+"       [reduce using rule 167 (cond)]
    "-"       [reduce using rule 167 (cond)]
    "*"       [reduce using rule 167 (cond)]
    "/"       [reduce using rule 167 (cond)]
    "%"       [reduce using rule 167 (cond)]
    "AND"     reduce using rule 155 (cond)
    "AND"     [reduce using rule 167 (cond)]
    "OR"      reduce using rule 155 (cond)
    "OR"      [reduce using rule 167 (cond)]
    ";"       reduce using rule 155 (cond)
    ";"       [reduce using rule 167 (cond)]
    ")"       reduce using rule 155 (cond)
    ")"       [reduce using rule 167 (cond)]
    ":"       reduce using rule 155 (cond)
    ":"       [reduce using rule 167 (cond)]
    ","       reduce using rule 155 (cond)
    ","       [reduce using rule 167 (cond)]
    "]"       reduce using rule 155 (cond)
    "]"       [reduce using rule 167 (cond)]
    $default  reduce using rule 155 (cond)


state 185

  145 expr: expr . "+" expr
  145     | expr "+" expr .
  146     | expr . "-" expr
  147     | expr . "*" expr
  148     | expr . "/" expr
  149     | expr . "%" expr
  150     | expr . "MOD" expr
  151 cond: expr . "==" expr
  152     | expr . "!=" expr
  153     | expr . "<" expr
  154     | expr . ">" expr
  155     | expr . "<=" expr
  156     | expr . ">=" expr
  167     | expr .

    "MOD"  shift, and go to state 129
    "*"    shift, and go to state 138
    "/"    shift, and go to state 139
    "%"    shift, and go to state 140

    "and"     reduce using rule 145 (expr)
    "and"     [reduce using rule 167 (cond)]
    "DOWNTO"  reduce using rule 145 (expr)
    "DOWNTO"  [reduce using rule 167 (cond)]
    "MOD"     [reduce using rule 167 (cond)]
    "or"      reduce using rule 145 (expr)
    "or"      [reduce using rule 167 (cond)]
    "STEP"    reduce using rule 145 (expr)
    "STEP"    [reduce using rule 167 (cond)]
    "TO"      reduce using rule 145 (expr)
    "TO"      [reduce using rule 167 (cond)]
    "=="      reduce using rule 145 (expr)
    "=="      [reduce using rule 167 (cond)]
    ">"       reduce using rule 145 (expr)
    ">"       [reduce using rule 167 (cond)]
    "<"       reduce using rule 145 (expr)
    "<"       [reduce using rule 167 (cond)]
    "!="      reduce using rule 145 (expr)
    "!="      [reduce using rule 167 (cond)]
    ">="      reduce using rule 145 (expr)
    ">="      [reduce using rule 167 (cond)]
    "<="      reduce using rule 145 (expr)
    "<="      [reduce using rule 167 (cond)]
    "+"       reduce using rule 145 (expr)
    "+"       [reduce using rule 167 (cond)]
    "-"       reduce using rule 145 (expr)
    "-"       [reduce using rule 167 (cond)]
    "*"       [reduce using rule 167 (cond)]
    "/"       [reduce using rule 167 (cond)]
    "%"       [reduce using rule 167 (cond)]
    "AND"     reduce using rule 145 (expr)
    "AND"     [reduce using rule 167 (cond)]
    "OR"      reduce using rule 145 (expr)
    "OR"      [reduce using rule 167 (cond)]
    ";"       reduce using rule 145 (expr)
    ";"       [reduce using rule 167 (cond)]
    ")"       reduce using rule 145 (expr)
    ")"       [reduce using rule 167 (cond)]
    ":"       reduce using rule 145 (expr)
    ":"       [reduce using rule 167 (cond)]
    ","       reduce using rule 145 (expr)
    ","       [reduce using rule 167 (cond)]
    "]"       reduce using rule 145 (expr)
    "]"       [reduce using rule 167 (cond)]
    $default  reduce using rule 145 (expr)


state 186

  145 expr: expr . "+" expr
  146     | expr . "-" expr
  146     | expr "-" expr .
  147     | expr . "*" expr
  148     | expr . "/" expr
  149     | expr . "%" expr
  150     | expr . "MOD" expr
  151 cond: expr . "==" expr
  152     | expr . "!=" expr
  153     | expr . "<" expr
  154     | expr . ">" expr
  155     | expr . "<=" expr
  156     | expr . ">=" expr
  167     | expr .

    "MOD"  shift, and go to state 129
    "*"    shift, and go to state 138
    "/"    shift, and go to state 139
    "%"    shift, and go to state 140

    "and"     reduce using rule 146 (expr)
    "and"     [reduce using rule 167 (cond)]
    "DOWNTO"  reduce using rule 146 (expr)
    "DOWNTO"  [reduce using rule 167 (cond)]
    "MOD"     [reduce using rule 167 (cond)]
    "or"      reduce using rule 146 (expr)
    "or"      [reduce using rule 167 (cond)]
    "STEP"    reduce using rule 146 (expr)
    "STEP"    [reduce using rule 167 (cond)]
    "TO"      reduce using rule 146 (expr)
    "TO"      [reduce using rule 167 (cond)]
    "=="      reduce using rule 146 (expr)
    "=="      [reduce using rule 167 (cond)]
    ">"       reduce using rule 146 (expr)
    ">"       [reduce using rule 167 (cond)]
    "<"       reduce using rule 146 (expr)
    "<"       [reduce using rule 167 (cond)]
    "!="      reduce using rule 146 (expr)
    "!="      [reduce using rule 167 (cond)]
    ">="      reduce using rule 146 (expr)
    ">="      [reduce using rule 167 (cond)]
    "<="      reduce using rule 146 (expr)
    "<="      [reduce using rule 167 (cond)]
    "+"       reduce using rule 146 (expr)
    "+"       [reduce using rule 167 (cond)]
    "-"       reduce using rule 146 (expr)
    "-"       [reduce using rule 167 (cond)]
    "*"       [reduce using rule 167 (cond)]
    "/"       [reduce using rule 167 (cond)]
    "%"       [reduce using rule 167 (cond)]
    "AND"     reduce using rule 146 (expr)
    "AND"     [reduce using rule 167 (cond)]
    "OR"      reduce using rule 146 (expr)
    "OR"      [reduce using rule 167 (cond)]
    ";"       reduce using rule 146 (expr)
    ";"       [reduce using rule 167 (cond)]
    ")"       reduce using rule 146 (expr)
    ")"       [reduce using rule 167 (cond)]
    ":"       reduce using rule 146 (expr)
    ":"       [reduce using rule 167 (cond)]
    ","       reduce using rule 146 (expr)
    ","       [reduce using rule 167 (cond)]
    "]"       reduce using rule 146 (expr)
    "]"       [reduce using rule 167 (cond)]
    $default  reduce using rule 146 (expr)


state 187

  145 expr: expr . "+" expr
  146     | expr . "-" expr
  147     | expr . "*" expr
  147     | expr "*" expr .
  148     | expr . "/" expr
  149     | expr . "%" expr
  150     | expr . "MOD" expr
  151 cond: expr . "==" expr
  152     | expr . "!=" expr
  153     | expr . "<" expr
  154     | expr . ">" expr
  155     | expr . "<=" expr
  156     | expr . ">=" expr
  167     | expr .

    "and"     reduce using rule 147 (expr)
    "and"     [reduce using rule 167 (cond)]
    "DOWNTO"  reduce using rule 147 (expr)
    "DOWNTO"  [reduce using rule 167 (cond)]
    "MOD"     reduce using rule 147 (expr)
    "MOD"     [reduce using rule 167 (cond)]
    "or"      reduce using rule 147 (expr)
    "or"      [reduce using rule 167 (cond)]
    "STEP"    reduce using rule 147 (expr)
    "STEP"    [reduce using rule 167 (cond)]
    "TO"      reduce using rule 147 (expr)
    "TO"      [reduce using rule 167 (cond)]
    "=="      reduce using rule 147 (expr)
    "=="      [reduce using rule 167 (cond)]
    ">"       reduce using rule 147 (expr)
    ">"       [reduce using rule 167 (cond)]
    "<"       reduce using rule 147 (expr)
    "<"       [reduce using rule 167 (cond)]
    "!="      reduce using rule 147 (expr)
    "!="      [reduce using rule 167 (cond)]
    ">="      reduce using rule 147 (expr)
    ">="      [reduce using rule 167 (cond)]
    "<="      reduce using rule 147 (expr)
    "<="      [reduce using rule 167 (cond)]
    "+"       reduce using rule 147 (expr)
    "+"       [reduce using rule 167 (cond)]
    "-"       reduce using rule 147 (expr)
    "-"       [reduce using rule 167 (cond)]
    "*"       reduce using rule 147 (expr)
    "*"       [reduce using rule 167 (cond)]
    "/"       reduce using rule 147 (expr)
    "/"       [reduce using rule 167 (cond)]
    "%"       reduce using rule 147 (expr)
    "%"       [reduce using rule 167 (cond)]
    "AND"     reduce using rule 147 (expr)
    "AND"     [reduce using rule 167 (cond)]
    "OR"      reduce using rule 147 (expr)
    "OR"      [reduce using rule 167 (cond)]
    ";"       reduce using rule 147 (expr)
    ";"       [reduce using rule 167 (cond)]
    ")"       reduce using rule 147 (expr)
    ")"       [reduce using rule 167 (cond)]
    ":"       reduce using rule 147 (expr)
    ":"       [reduce using rule 167 (cond)]
    ","       reduce using rule 147 (expr)
    ","       [reduce using rule 167 (cond)]
    "]"       reduce using rule 147 (expr)
    "]"       [reduce using rule 167 (cond)]
    $default  reduce using rule 147 (expr)


state 188

  145 expr: expr . "+" expr
  146     | expr . "-" expr
  147     | expr . "*" expr
  148     | expr . "/" expr
  148     | expr "/" expr .
  149     | expr . "%" expr
  150     | expr . "MOD" expr
  151 cond: expr . "==" expr
  152     | expr . "!=" expr
  153     | expr . "<" expr
  154     | expr . ">" expr
  155     | expr . "<=" expr
  156     | expr . ">=" expr
  167     | expr .

    "and"     reduce using rule 148 (expr)
    "and"     [reduce using rule 167 (cond)]
    "DOWNTO"  reduce using rule 148 (expr)
    "DOWNTO"  [reduce using rule 167 (cond)]
    "MOD"     reduce using rule 148 (expr)
    "MOD"     [reduce using rule 167 (cond)]
    "or"      reduce using rule 148 (expr)
    "or"      [reduce using rule 167 (cond)]
    "STEP"    reduce using rule 148 (expr)
    "STEP"    [reduce using rule 167 (cond)]
    "TO"      reduce using rule 148 (expr)
    "TO"      [reduce using rule 167 (cond)]
    "=="      reduce using rule 148 (expr)
    "=="      [reduce using rule 167 (cond)]
    ">"       reduce using rule 148 (expr)
    ">"       [reduce using rule 167 (cond)]
    "<"       reduce using rule 148 (expr)
    "<"       [reduce using rule 167 (cond)]
    "!="      reduce using rule 148 (expr)
    "!="      [reduce using rule 167 (cond)]
    ">="      reduce using rule 148 (expr)
    ">="      [reduce using rule 167 (cond)]
    "<="      reduce using rule 148 (expr)
    "<="      [reduce using rule 167 (cond)]
    "+"       reduce using rule 148 (expr)
    "+"       [reduce using rule 167 (cond)]
    "-"       reduce using rule 148 (expr)
    "-"       [reduce using rule 167 (cond)]
    "*"       reduce using rule 148 (expr)
    "*"       [reduce using rule 167 (cond)]
    "/"       reduce using rule 148 (expr)
    "/"       [reduce using rule 167 (cond)]
    "%"       reduce using rule 148 (expr)
    "%"       [reduce using rule 167 (cond)]
    "AND"     reduce using rule 148 (expr)
    "AND"     [reduce using rule 167 (cond)]
    "OR"      reduce using rule 148 (expr)
    "OR"      [reduce using rule 167 (cond)]
    ";"       reduce using rule 148 (expr)
    ";"       [reduce using rule 167 (cond)]
    ")"       reduce using rule 148 (expr)
    ")"       [reduce using rule 167 (cond)]
    ":"       reduce using rule 148 (expr)
    ":"       [reduce using rule 167 (cond)]
    ","       reduce using rule 148 (expr)
    ","       [reduce using rule 167 (cond)]
    "]"       reduce using rule 148 (expr)
    "]"       [reduce using rule 167 (cond)]
    $default  reduce using rule 148 (expr)


state 189

  145 expr: expr . "+" expr
  146     | expr . "-" expr
  147     | expr . "*" expr
  148     | expr . "/" expr
  149     | expr . "%" expr
  149     | expr "%" expr .
  150     | expr . "MOD" expr
  151 cond: expr . "==" expr
  152     | expr . "!=" expr
  153     | expr . "<" expr
  154     | expr . ">" expr
  155     | expr . "<=" expr
  156     | expr . ">=" expr
  167     | expr .

    "and"     reduce using rule 149 (expr)
    "and"     [reduce using rule 167 (cond)]
    "DOWNTO"  reduce using rule 149 (expr)
    "DOWNTO"  [reduce using rule 167 (cond)]
    "MOD"     reduce using rule 149 (expr)
    "MOD"     [reduce using rule 167 (cond)]
    "or"      reduce using rule 149 (expr)
    "or"      [reduce using rule 167 (cond)]
    "STEP"    reduce using rule 149 (expr)
    "STEP"    [reduce using rule 167 (cond)]
    "TO"      reduce using rule 149 (expr)
    "TO"      [reduce using rule 167 (cond)]
    "=="      reduce using rule 149 (expr)
    "=="      [reduce using rule 167 (cond)]
    ">"       reduce using rule 149 (expr)
    ">"       [reduce using rule 167 (cond)]
    "<"       reduce using rule 149 (expr)
    "<"       [reduce using rule 167 (cond)]
    "!="      reduce using rule 149 (expr)
    "!="      [reduce using rule 167 (cond)]
    ">="      reduce using rule 149 (expr)
    ">="      [reduce using rule 167 (cond)]
    "<="      reduce using rule 149 (expr)
    "<="      [reduce using rule 167 (cond)]
    "+"       reduce using rule 149 (expr)
    "+"       [reduce using rule 167 (cond)]
    "-"       reduce using rule 149 (expr)
    "-"       [reduce using rule 167 (cond)]
    "*"       reduce using rule 149 (expr)
    "*"       [reduce using rule 167 (cond)]
    "/"       reduce using rule 149 (expr)
    "/"       [reduce using rule 167 (cond)]
    "%"       reduce using rule 149 (expr)
    "%"       [reduce using rule 167 (cond)]
    "AND"     reduce using rule 149 (expr)
    "AND"     [reduce using rule 167 (cond)]
    "OR"      reduce using rule 149 (expr)
    "OR"      [reduce using rule 167 (cond)]
    ";"       reduce using rule 149 (expr)
    ";"       [reduce using rule 167 (cond)]
    ")"       reduce using rule 149 (expr)
    ")"       [reduce using rule 167 (cond)]
    ":"       reduce using rule 149 (expr)
    ":"       [reduce using rule 167 (cond)]
    ","       reduce using rule 149 (expr)
    ","       [reduce using rule 167 (cond)]
    "]"       reduce using rule 149 (expr)
    "]"       [reduce using rule 167 (cond)]
    $default  reduce using rule 149 (expr)


state 190

   15 var_def: type T_id "=" expr $@3 var_def_list . ";"

    ";"  shift, and go to state 221


state 191

  162 cond: cond "and" $@34 . cond

    "false"       shift, and go to state 73
    "not"         shift, and go to state 74
    "true"        shift, and go to state 75
    T_const_int   shift, and go to state 76
    T_const_real  shift, and go to state 77
    T_id          shift, and go to state 58
    T_const_char  shift, and go to state 78
    T_string      shift, and go to state 79
    "+"           shift, and go to state 80
    "-"           shift, and go to state 81
    "!"           shift, and go to state 82
    "("           shift, and go to state 83

    l_value  go to state 84
    call     go to state 85
    expr     go to state 123
    cond     go to state 222


state 192

  166 cond: cond "or" $@36 . cond

    "false"       shift, and go to state 73
    "not"         shift, and go to state 74
    "true"        shift, and go to state 75
    T_const_int   shift, and go to state 76
    T_const_real  shift, and go to state 77
    T_id          shift, and go to state 58
    T_const_char  shift, and go to state 78
    T_string      shift, and go to state 79
    "+"           shift, and go to state 80
    "-"           shift, and go to state 81
    "!"           shift, and go to state 82
    "("           shift, and go to state 83

    l_value  go to state 84
    call     go to state 85
    expr     go to state 123
    cond     go to state 223


state 193

  160 cond: cond "AND" $@33 . cond

    "false"       shift, and go to state 73
    "not"         shift, and go to state 74
    "true"        shift, and go to state 75
    T_const_int   shift, and go to state 76
    T_const_real  shift, and go to state 77
    T_id          shift, and go to state 58
    T_const_char  shift, and go to state 78
    T_string      shift, and go to state 79
    "+"           shift, and go to state 80
    "-"           shift, and go to state 81
    "!"           shift, and go to state 82
    "("           shift, and go to state 83

    l_value  go to state 84
    call     go to state 85
    expr     go to state 123
    cond     go to state 224


state 194

  164 cond: cond "OR" $@35 . cond

    "false"       shift, and go to state 73
    "not"         shift, and go to state 74
    "true"        shift, and go to state 75
    T_const_int   shift, and go to state 76
    T_const_real  shift, and go to state 77
    T_id          shift, and go to state 58
    T_const_char  shift, and go to state 78
    T_string      shift, and go to state 79
    "+"           shift, and go to state 80
    "-"           shift, and go to state 81
    "!"           shift, and go to state 82
    "("           shift, and go to state 83

    l_value  go to state 84
    call     go to state 85
    expr     go to state 123
    cond     go to state 225


state 195

   26 var_init_list: "[" const_expr "]" $@8 . var_init_list

    "["  shift, and go to state 41

    var_init_list  go to state 226


state 196

   21 var_def_list: "," T_id "=" . expr $@6 var_def_list

    "false"       shift, and go to state 73
    "not"         shift, and go to state 74
    "true"        shift, and go to state 75
    T_const_int   shift, and go to state 76
    T_const_real  shift, and go to state 77
    T_id          shift, and go to state 58
    T_const_char  shift, and go to state 78
    T_string      shift, and go to state 79
    "+"           shift, and go to state 80
    "-"           shift, and go to state 81
    "!"           shift, and go to state 82
    "("           shift, and go to state 83

    l_value  go to state 84
    call     go to state 85
    expr     go to state 227
    cond     go to state 87


state 197

   19 var_def_list: "," T_id $@5 . var_def_list

    ","  shift, and go to state 90

    $default  reduce using rule 24 (var_def_list)

    var_def_list  go to state 228


state 198

   23 var_def_list: "," T_id var_init_list . $@7 var_def_list

    $default  reduce using rule 22 ($@7)

    $@7  go to state 229


state 199

   17 var_def: type T_id var_init_list $@4 var_def_list ";" .

    $default  reduce using rule 17 (var_def)


state 200

   10 const_def_list: "," T_id . "=" const_expr const_def_list

    "="  shift, and go to state 230


state 201

    9 const_def: "const" type T_id "=" const_expr const_def_list ";" .

    $default  reduce using rule 9 (const_def)


state 202

   99 stmt: T_do $@26 stmt $@27 . T_while $@28 "(" cond ")" ";"

    T_while  shift, and go to state 231


state 203

   95 stmt: T_FOR $@24 "(" T_id . "," range $@25 ")" stmt

    ","  shift, and go to state 232


state 204

   86 stmt: "if" "(" cond ")" . $@19 stmt
   89     | "if" "(" cond ")" . $@20 stmt "else" $@21 stmt

    "break"      reduce using rule 85 ($@19)
    "break"      [reduce using rule 87 ($@20)]
    "continue"   reduce using rule 85 ($@19)
    "continue"   [reduce using rule 87 ($@20)]
    T_do         reduce using rule 85 ($@19)
    T_do         [reduce using rule 87 ($@20)]
    T_FOR        reduce using rule 85 ($@19)
    T_FOR        [reduce using rule 87 ($@20)]
    "if"         reduce using rule 85 ($@19)
    "if"         [reduce using rule 87 ($@20)]
    "return"     reduce using rule 85 ($@19)
    "return"     [reduce using rule 87 ($@20)]
    "switch"     reduce using rule 85 ($@19)
    "switch"     [reduce using rule 87 ($@20)]
    T_while      reduce using rule 85 ($@19)
    T_while      [reduce using rule 87 ($@20)]
    "WRITE"      reduce using rule 85 ($@19)
    "WRITE"      [reduce using rule 87 ($@20)]
    "WRITELN"    reduce using rule 85 ($@19)
    "WRITELN"    [reduce using rule 87 ($@20)]
    "WRITESP"    reduce using rule 85 ($@19)
    "WRITESP"    [reduce using rule 87 ($@20)]
    "WRITESPLN"  reduce using rule 85 ($@19)
    "WRITESPLN"  [reduce using rule 87 ($@20)]
    T_id         reduce using rule 85 ($@19)
    T_id         [reduce using rule 87 ($@20)]
    ";"          reduce using rule 85 ($@19)
    ";"          [reduce using rule 87 ($@20)]
    "{"          reduce using rule 85 ($@19)
    "{"          [reduce using rule 87 ($@20)]
    $default     reduce using rule 85 ($@19)

    $@19  go to state 233
    $@20  go to state 234


state 205

  101 stmt: "switch" "(" expr $@29 . ")" "{" switch_cases "}"

    ")"  shift, and go to state 235


state 206

   92 stmt: T_while $@22 "(" cond . ")" $@23 stmt
  160 cond: cond . "AND" $@33 cond
  162     | cond . "and" $@34 cond
  164     | cond . "OR" $@35 cond
  166     | cond . "or" $@36 cond
  168 expr: cond .

    "and"  shift, and go to state 142
    "or"   shift, and go to state 143
    "AND"  shift, and go to state 144
    "OR"   shift, and go to state 145
    ")"    shift, and go to state 236

    "and"     [reduce using rule 168 (expr)]
    "or"      [reduce using rule 168 (expr)]
    "AND"     [reduce using rule 168 (expr)]
    "OR"      [reduce using rule 168 (expr)]
    ")"       [reduce using rule 168 (expr)]
    $default  reduce using rule 168 (expr)


state 207

   54 l_value: T_id $@11 "[" expr . "]" l_value_list
  145 expr: expr . "+" expr
  146     | expr . "-" expr
  147     | expr . "*" expr
  148     | expr . "/" expr
  149     | expr . "%" expr
  150     | expr . "MOD" expr
  151 cond: expr . "==" expr
  152     | expr . "!=" expr
  153     | expr . "<" expr
  154     | expr . ">" expr
  155     | expr . "<=" expr
  156     | expr . ">=" expr
  167     | expr .

    "MOD"  shift, and go to state 129
    "=="   shift, and go to state 130
    ">"    shift, and go to state 131
    "<"    shift, and go to state 132
    "!="   shift, and go to state 133
    ">="   shift, and go to state 134
    "<="   shift, and go to state 135
    "+"    shift, and go to state 136
    "-"    shift, and go to state 137
    "*"    shift, and go to state 138
    "/"    shift, and go to state 139
    "%"    shift, and go to state 140
    "]"    shift, and go to state 237

    "MOD"     [reduce using rule 167 (cond)]
    "=="      [reduce using rule 167 (cond)]
    ">"       [reduce using rule 167 (cond)]
    "<"       [reduce using rule 167 (cond)]
    "!="      [reduce using rule 167 (cond)]
    ">="      [reduce using rule 167 (cond)]
    "<="      [reduce using rule 167 (cond)]
    "+"       [reduce using rule 167 (cond)]
    "-"       [reduce using rule 167 (cond)]
    "*"       [reduce using rule 167 (cond)]
    "/"       [reduce using rule 167 (cond)]
    "%"       [reduce using rule 167 (cond)]
    "]"       [reduce using rule 167 (cond)]
    $default  reduce using rule 167 (cond)


state 208

   59 call: T_id $@12 "(" $@13 . call_if ")"

    ")"       reduce using rule 63 (call_if)
    $default  reduce using rule 60 ($@14)

    call_if  go to state 238
    $@14     go to state 239


state 209

   76 stmt: l_value "=" expr ";" .

    $default  reduce using rule 76 (stmt)


state 210

   77 stmt: l_value "+=" expr ";" .

    $default  reduce using rule 77 (stmt)


state 211

   78 stmt: l_value "-=" expr ";" .

    $default  reduce using rule 78 (stmt)


state 212

   79 stmt: l_value "*=" expr ";" .

    $default  reduce using rule 79 (stmt)


state 213

   80 stmt: l_value "/=" expr ";" .

    $default  reduce using rule 80 (stmt)


state 214

   81 stmt: l_value "%=" expr ";" .

    $default  reduce using rule 81 (stmt)


state 215

  126 format: "FORM" "(" . expr "," expr "," expr ")"
  127       | "FORM" "(" . expr "," expr ")"

    "false"       shift, and go to state 73
    "not"         shift, and go to state 74
    "true"        shift, and go to state 75
    T_const_int   shift, and go to state 76
    T_const_real  shift, and go to state 77
    T_id          shift, and go to state 58
    T_const_char  shift, and go to state 78
    T_string      shift, and go to state 79
    "+"           shift, and go to state 80
    "-"           shift, and go to state 81
    "!"           shift, and go to state 82
    "("           shift, and go to state 83

    l_value  go to state 84
    call     go to state 85
    expr     go to state 240
    cond     go to state 87


state 216

  107 stmt: write "(" ")" ";" .

    $default  reduce using rule 107 (stmt)


state 217

  123 format_more: "," . format format_more

    "false"       shift, and go to state 73
    "FORM"        shift, and go to state 170
    "not"         shift, and go to state 74
    "true"        shift, and go to state 75
    T_const_int   shift, and go to state 76
    T_const_real  shift, and go to state 77
    T_id          shift, and go to state 58
    T_const_char  shift, and go to state 78
    T_string      shift, and go to state 79
    "+"           shift, and go to state 80
    "-"           shift, and go to state 81
    "!"           shift, and go to state 82
    "("           shift, and go to state 83

    l_value  go to state 84
    call     go to state 85
    format   go to state 241
    expr     go to state 173
    cond     go to state 87


state 218

  108 stmt: write "(" format format_more . ")" ";"

    ")"  shift, and go to state 242


state 219

   40 formal_list: "[" formal_if2 "]" . formal_list
   41            | "[" formal_if2 "]" .

    "["  shift, and go to state 118

    $default  reduce using rule 41 (formal_list)

    formal_list  go to state 243


state 220

   33 routine_header_if_list: "," type formal . routine_header_if_list

    ","  shift, and go to state 121

    $default  reduce using rule 34 (routine_header_if_list)

    routine_header_if_list  go to state 244


state 221

   15 var_def: type T_id "=" expr $@3 var_def_list ";" .

    $default  reduce using rule 15 (var_def)


state 222

  160 cond: cond . "AND" $@33 cond
  162     | cond . "and" $@34 cond
  162     | cond "and" $@34 cond .
  164     | cond . "OR" $@35 cond
  166     | cond . "or" $@36 cond
  168 expr: cond .

    "and"     reduce using rule 162 (cond)
    "and"     [reduce using rule 168 (expr)]
    "DOWNTO"  reduce using rule 162 (cond)
    "DOWNTO"  [reduce using rule 168 (expr)]
    "MOD"     reduce using rule 162 (cond)
    "MOD"     [reduce using rule 168 (expr)]
    "or"      reduce using rule 162 (cond)
    "or"      [reduce using rule 168 (expr)]
    "STEP"    reduce using rule 162 (cond)
    "STEP"    [reduce using rule 168 (expr)]
    "TO"      reduce using rule 162 (cond)
    "TO"      [reduce using rule 168 (expr)]
    "=="      reduce using rule 162 (cond)
    "=="      [reduce using rule 168 (expr)]
    ">"       reduce using rule 162 (cond)
    ">"       [reduce using rule 168 (expr)]
    "<"       reduce using rule 162 (cond)
    "<"       [reduce using rule 168 (expr)]
    "!="      reduce using rule 162 (cond)
    "!="      [reduce using rule 168 (expr)]
    ">="      reduce using rule 162 (cond)
    ">="      [reduce using rule 168 (expr)]
    "<="      reduce using rule 162 (cond)
    "<="      [reduce using rule 168 (expr)]
    "+"       reduce using rule 162 (cond)
    "+"       [reduce using rule 168 (expr)]
    "-"       reduce using rule 162 (cond)
    "-"       [reduce using rule 168 (expr)]
    "*"       reduce using rule 162 (cond)
    "*"       [reduce using rule 168 (expr)]
    "/"       reduce using rule 162 (cond)
    "/"       [reduce using rule 168 (expr)]
    "%"       reduce using rule 162 (cond)
    "%"       [reduce using rule 168 (expr)]
    "AND"     reduce using rule 162 (cond)
    "AND"     [reduce using rule 168 (expr)]
    "OR"      reduce using rule 162 (cond)
    "OR"      [reduce using rule 168 (expr)]
    ";"       reduce using rule 162 (cond)
    ";"       [reduce using rule 168 (expr)]
    ")"       reduce using rule 162 (cond)
    ")"       [reduce using rule 168 (expr)]
    ":"       reduce using rule 162 (cond)
    ":"       [reduce using rule 168 (expr)]
    ","       reduce using rule 162 (cond)
    ","       [reduce using rule 168 (expr)]
    "]"       reduce using rule 162 (cond)
    "]"       [reduce using rule 168 (expr)]
    $default  reduce using rule 162 (cond)


state 223

  160 cond: cond . "AND" $@33 cond
  162     | cond . "and" $@34 cond
  164     | cond . "OR" $@35 cond
  166     | cond . "or" $@36 cond
  166     | cond "or" $@36 cond .
  168 expr: cond .

    "and"  shift, and go to state 142
    "AND"  shift, and go to state 144

    "and"     [reduce using rule 168 (expr)]
    "DOWNTO"  reduce using rule 166 (cond)
    "DOWNTO"  [reduce using rule 168 (expr)]
    "MOD"     reduce using rule 166 (cond)
    "MOD"     [reduce using rule 168 (expr)]
    "or"      reduce using rule 166 (cond)
    "or"      [reduce using rule 168 (expr)]
    "STEP"    reduce using rule 166 (cond)
    "STEP"    [reduce using rule 168 (expr)]
    "TO"      reduce using rule 166 (cond)
    "TO"      [reduce using rule 168 (expr)]
    "=="      reduce using rule 166 (cond)
    "=="      [reduce using rule 168 (expr)]
    ">"       reduce using rule 166 (cond)
    ">"       [reduce using rule 168 (expr)]
    "<"       reduce using rule 166 (cond)
    "<"       [reduce using rule 168 (expr)]
    "!="      reduce using rule 166 (cond)
    "!="      [reduce using rule 168 (expr)]
    ">="      reduce using rule 166 (cond)
    ">="      [reduce using rule 168 (expr)]
    "<="      reduce using rule 166 (cond)
    "<="      [reduce using rule 168 (expr)]
    "+"       reduce using rule 166 (cond)
    "+"       [reduce using rule 168 (expr)]
    "-"       reduce using rule 166 (cond)
    "-"       [reduce using rule 168 (expr)]
    "*"       reduce using rule 166 (cond)
    "*"       [reduce using rule 168 (expr)]
    "/"       reduce using rule 166 (cond)
    "/"       [reduce using rule 168 (expr)]
    "%"       reduce using rule 166 (cond)
    "%"       [reduce using rule 168 (expr)]
    "AND"     [reduce using rule 168 (expr)]
    "OR"      reduce using rule 166 (cond)
    "OR"      [reduce using rule 168 (expr)]
    ";"       reduce using rule 166 (cond)
    ";"       [reduce using rule 168 (expr)]
    ")"       reduce using rule 166 (cond)
    ")"       [reduce using rule 168 (expr)]
    ":"       reduce using rule 166 (cond)
    ":"       [reduce using rule 168 (expr)]
    ","       reduce using rule 166 (cond)
    ","       [reduce using rule 168 (expr)]
    "]"       reduce using rule 166 (cond)
    "]"       [reduce using rule 168 (expr)]
    $default  reduce using rule 166 (cond)


state 224

  160 cond: cond . "AND" $@33 cond
  160     | cond "AND" $@33 cond .
  162     | cond . "and" $@34 cond
  164     | cond . "OR" $@35 cond
  166     | cond . "or" $@36 cond
  168 expr: cond .

    "and"     reduce using rule 160 (cond)
    "and"     [reduce using rule 168 (expr)]
    "DOWNTO"  reduce using rule 160 (cond)
    "DOWNTO"  [reduce using rule 168 (expr)]
    "MOD"     reduce using rule 160 (cond)
    "MOD"     [reduce using rule 168 (expr)]
    "or"      reduce using rule 160 (cond)
    "or"      [reduce using rule 168 (expr)]
    "STEP"    reduce using rule 160 (cond)
    "STEP"    [reduce using rule 168 (expr)]
    "TO"      reduce using rule 160 (cond)
    "TO"      [reduce using rule 168 (expr)]
    "=="      reduce using rule 160 (cond)
    "=="      [reduce using rule 168 (expr)]
    ">"       reduce using rule 160 (cond)
    ">"       [reduce using rule 168 (expr)]
    "<"       reduce using rule 160 (cond)
    "<"       [reduce using rule 168 (expr)]
    "!="      reduce using rule 160 (cond)
    "!="      [reduce using rule 168 (expr)]
    ">="      reduce using rule 160 (cond)
    ">="      [reduce using rule 168 (expr)]
    "<="      reduce using rule 160 (cond)
    "<="      [reduce using rule 168 (expr)]
    "+"       reduce using rule 160 (cond)
    "+"       [reduce using rule 168 (expr)]
    "-"       reduce using rule 160 (cond)
    "-"       [reduce using rule 168 (expr)]
    "*"       reduce using rule 160 (cond)
    "*"       [reduce using rule 168 (expr)]
    "/"       reduce using rule 160 (cond)
    "/"       [reduce using rule 168 (expr)]
    "%"       reduce using rule 160 (cond)
    "%"       [reduce using rule 168 (expr)]
    "AND"     reduce using rule 160 (cond)
    "AND"     [reduce using rule 168 (expr)]
    "OR"      reduce using rule 160 (cond)
    "OR"      [reduce using rule 168 (expr)]
    ";"       reduce using rule 160 (cond)
    ";"       [reduce using rule 168 (expr)]
    ")"       reduce using rule 160 (cond)
    ")"       [reduce using rule 168 (expr)]
    ":"       reduce using rule 160 (cond)
    ":"       [reduce using rule 168 (expr)]
    ","       reduce using rule 160 (cond)
    ","       [reduce using rule 168 (expr)]
    "]"       reduce using rule 160 (cond)
    "]"       [reduce using rule 168 (expr)]
    $default  reduce using rule 160 (cond)


state 225

  160 cond: cond . "AND" $@33 cond
  162     | cond . "and" $@34 cond
  164     | cond . "OR" $@35 cond
  164     | cond "OR" $@35 cond .
  166     | cond . "or" $@36 cond
  168 expr: cond .

    "and"  shift, and go to state 142
    "AND"  shift, and go to state 144

    "and"     [reduce using rule 168 (expr)]
    "DOWNTO"  reduce using rule 164 (cond)
    "DOWNTO"  [reduce using rule 168 (expr)]
    "MOD"     reduce using rule 164 (cond)
    "MOD"     [reduce using rule 168 (expr)]
    "or"      reduce using rule 164 (cond)
    "or"      [reduce using rule 168 (expr)]
    "STEP"    reduce using rule 164 (cond)
    "STEP"    [reduce using rule 168 (expr)]
    "TO"      reduce using rule 164 (cond)
    "TO"      [reduce using rule 168 (expr)]
    "=="      reduce using rule 164 (cond)
    "=="      [reduce using rule 168 (expr)]
    ">"       reduce using rule 164 (cond)
    ">"       [reduce using rule 168 (expr)]
    "<"       reduce using rule 164 (cond)
    "<"       [reduce using rule 168 (expr)]
    "!="      reduce using rule 164 (cond)
    "!="      [reduce using rule 168 (expr)]
    ">="      reduce using rule 164 (cond)
    ">="      [reduce using rule 168 (expr)]
    "<="      reduce using rule 164 (cond)
    "<="      [reduce using rule 168 (expr)]
    "+"       reduce using rule 164 (cond)
    "+"       [reduce using rule 168 (expr)]
    "-"       reduce using rule 164 (cond)
    "-"       [reduce using rule 168 (expr)]
    "*"       reduce using rule 164 (cond)
    "*"       [reduce using rule 168 (expr)]
    "/"       reduce using rule 164 (cond)
    "/"       [reduce using rule 168 (expr)]
    "%"       reduce using rule 164 (cond)
    "%"       [reduce using rule 168 (expr)]
    "AND"     [reduce using rule 168 (expr)]
    "OR"      reduce using rule 164 (cond)
    "OR"      [reduce using rule 168 (expr)]
    ";"       reduce using rule 164 (cond)
    ";"       [reduce using rule 168 (expr)]
    ")"       reduce using rule 164 (cond)
    ")"       [reduce using rule 168 (expr)]
    ":"       reduce using rule 164 (cond)
    ":"       [reduce using rule 168 (expr)]
    ","       reduce using rule 164 (cond)
    ","       [reduce using rule 168 (expr)]
    "]"       reduce using rule 164 (cond)
    "]"       [reduce using rule 168 (expr)]
    $default  reduce using rule 164 (cond)


state 226

   26 var_init_list: "[" const_expr "]" $@8 var_init_list .

    $default  reduce using rule 26 (var_init_list)


state 227

   21 var_def_list: "," T_id "=" expr . $@6 var_def_list
  145 expr: expr . "+" expr
  146     | expr . "-" expr
  147     | expr . "*" expr
  148     | expr . "/" expr
  149     | expr . "%" expr
  150     | expr . "MOD" expr
  151 cond: expr . "==" expr
  152     | expr . "!=" expr
  153     | expr . "<" expr
  154     | expr . ">" expr
  155     | expr . "<=" expr
  156     | expr . ">=" expr
  167     | expr .

    "MOD"  shift, and go to state 129
    "=="   shift, and go to state 130
    ">"    shift, and go to state 131
    "<"    shift, and go to state 132
    "!="   shift, and go to state 133
    ">="   shift, and go to state 134
    "<="   shift, and go to state 135
    "+"    shift, and go to state 136
    "-"    shift, and go to state 137
    "*"    shift, and go to state 138
    "/"    shift, and go to state 139
    "%"    shift, and go to state 140

    "MOD"     [reduce using rule 167 (cond)]
    "=="      [reduce using rule 167 (cond)]
    ">"       [reduce using rule 167 (cond)]
    "<"       [reduce using rule 167 (cond)]
    "!="      [reduce using rule 167 (cond)]
    ">="      [reduce using rule 167 (cond)]
    "<="      [reduce using rule 167 (cond)]
    "+"       [reduce using rule 167 (cond)]
    "-"       [reduce using rule 167 (cond)]
    "*"       [reduce using rule 167 (cond)]
    "/"       [reduce using rule 167 (cond)]
    "%"       [reduce using rule 167 (cond)]
    ";"       reduce using rule 20 ($@6)
    ";"       [reduce using rule 167 (cond)]
    ","       reduce using rule 20 ($@6)
    ","       [reduce using rule 167 (cond)]
    $default  reduce using rule 167 (cond)

    $@6  go to state 245


state 228

   19 var_def_list: "," T_id $@5 var_def_list .

    $default  reduce using rule 19 (var_def_list)


state 229

   23 var_def_list: "," T_id var_init_list $@7 . var_def_list

    ","  shift, and go to state 90

    $default  reduce using rule 24 (var_def_list)

    var_def_list  go to state 246


state 230

   10 const_def_list: "," T_id "=" . const_expr const_def_list

    $default  reduce using rule 132 ($@32)

    const_expr  go to state 247
    $@32        go to state 89


state 231

   99 stmt: T_do $@26 stmt $@27 T_while . $@28 "(" cond ")" ";"

    $default  reduce using rule 98 ($@28)

    $@28  go to state 248


state 232

   95 stmt: T_FOR $@24 "(" T_id "," . range $@25 ")" stmt

    "false"       shift, and go to state 73
    "not"         shift, and go to state 74
    "true"        shift, and go to state 75
    T_const_int   shift, and go to state 76
    T_const_real  shift, and go to state 77
    T_id          shift, and go to state 58
    T_const_char  shift, and go to state 78
    T_string      shift, and go to state 79
    "+"           shift, and go to state 80
    "-"           shift, and go to state 81
    "!"           shift, and go to state 82
    "("           shift, and go to state 83

    l_value  go to state 84
    call     go to state 85
    range    go to state 249
    expr     go to state 250
    cond     go to state 87


state 233

   86 stmt: "if" "(" cond ")" $@19 . stmt

    "break"      shift, and go to state 46
    "continue"   shift, and go to state 47
    T_do         shift, and go to state 48
    T_FOR        shift, and go to state 49
    "if"         shift, and go to state 50
    "return"     shift, and go to state 51
    "switch"     shift, and go to state 52
    T_while      shift, and go to state 53
    "WRITE"      shift, and go to state 54
    "WRITELN"    shift, and go to state 55
    "WRITESP"    shift, and go to state 56
    "WRITESPLN"  shift, and go to state 57
    T_id         shift, and go to state 58
    ";"          shift, and go to state 59
    "{"          shift, and go to state 35

    l_value  go to state 62
    call     go to state 63
    block    go to state 64
    stmt     go to state 251
    write    go to state 68


state 234

   89 stmt: "if" "(" cond ")" $@20 . stmt "else" $@21 stmt

    "break"      shift, and go to state 46
    "continue"   shift, and go to state 47
    T_do         shift, and go to state 48
    T_FOR        shift, and go to state 49
    "if"         shift, and go to state 50
    "return"     shift, and go to state 51
    "switch"     shift, and go to state 52
    T_while      shift, and go to state 53
    "WRITE"      shift, and go to state 54
    "WRITELN"    shift, and go to state 55
    "WRITESP"    shift, and go to state 56
    "WRITESPLN"  shift, and go to state 57
    T_id         shift, and go to state 58
    ";"          shift, and go to state 59
    "{"          shift, and go to state 35

    l_value  go to state 62
    call     go to state 63
    block    go to state 64
    stmt     go to state 252
    write    go to state 68


state 235

  101 stmt: "switch" "(" expr $@29 ")" . "{" switch_cases "}"

    "{"  shift, and go to state 253


state 236

   92 stmt: T_while $@22 "(" cond ")" . $@23 stmt

    $default  reduce using rule 91 ($@23)

    $@23  go to state 254


state 237

   54 l_value: T_id $@11 "[" expr "]" . l_value_list

    "["  shift, and go to state 255

    $default  reduce using rule 55 (l_value_list)

    l_value_list  go to state 256


state 238

   59 call: T_id $@12 "(" $@13 call_if . ")"

    ")"  shift, and go to state 257


state 239

   62 call_if: $@14 . expr $@15 call_if_list

    "false"       shift, and go to state 73
    "not"         shift, and go to state 74
    "true"        shift, and go to state 75
    T_const_int   shift, and go to state 76
    T_const_real  shift, and go to state 77
    T_id          shift, and go to state 58
    T_const_char  shift, and go to state 78
    T_string      shift, and go to state 79
    "+"           shift, and go to state 80
    "-"           shift, and go to state 81
    "!"           shift, and go to state 82
    "("           shift, and go to state 83

    l_value  go to state 84
    call     go to state 85
    expr     go to state 258
    cond     go to state 87


state 240

  126 format: "FORM" "(" expr . "," expr "," expr ")"
  127       | "FORM" "(" expr . "," expr ")"
  145 expr: expr . "+" expr
  146     | expr . "-" expr
  147     | expr . "*" expr
  148     | expr . "/" expr
  149     | expr . "%" expr
  150     | expr . "MOD" expr
  151 cond: expr . "==" expr
  152     | expr . "!=" expr
  153     | expr . "<" expr
  154     | expr . ">" expr
  155     | expr . "<=" expr
  156     | expr . ">=" expr
  167     | expr .

    "MOD"  shift, and go to state 129
    "=="   shift, and go to state 130
    ">"    shift, and go to state 131
    "<"    shift, and go to state 132
    "!="   shift, and go to state 133
    ">="   shift, and go to state 134
    "<="   shift, and go to state 135
    "+"    shift, and go to state 136
    "-"    shift, and go to state 137
    "*"    shift, and go to state 138
    "/"    shift, and go to state 139
    "%"    shift, and go to state 140
    ","    shift, and go to state 259

    "MOD"     [reduce using rule 167 (cond)]
    "=="      [reduce using rule 167 (cond)]
    ">"       [reduce using rule 167 (cond)]
    "<"       [reduce using rule 167 (cond)]
    "!="      [reduce using rule 167 (cond)]
    ">="      [reduce using rule 167 (cond)]
    "<="      [reduce using rule 167 (cond)]
    "+"       [reduce using rule 167 (cond)]
    "-"       [reduce using rule 167 (cond)]
    "*"       [reduce using rule 167 (cond)]
    "/"       [reduce using rule 167 (cond)]
    "%"       [reduce using rule 167 (cond)]
    ","       [reduce using rule 167 (cond)]
    $default  reduce using rule 167 (cond)


state 241

  123 format_more: "," format . format_more

    ","  shift, and go to state 217

    $default  reduce using rule 124 (format_more)

    format_more  go to state 260


state 242

  108 stmt: write "(" format format_more ")" . ";"

    ";"  shift, and go to state 261


state 243

   40 formal_list: "[" formal_if2 "]" formal_list .

    $default  reduce using rule 40 (formal_list)


state 244

   33 routine_header_if_list: "," type formal routine_header_if_list .

    $default  reduce using rule 33 (routine_header_if_list)


state 245

   21 var_def_list: "," T_id "=" expr $@6 . var_def_list

    ","  shift, and go to state 90

    $default  reduce using rule 24 (var_def_list)

    var_def_list  go to state 262


state 246

   23 var_def_list: "," T_id var_init_list $@7 var_def_list .

    $default  reduce using rule 23 (var_def_list)


state 247

   10 const_def_list: "," T_id "=" const_expr . const_def_list

    ","  shift, and go to state 151

    $default  reduce using rule 11 (const_def_list)

    const_def_list  go to state 263


state 248

   99 stmt: T_do $@26 stmt $@27 T_while $@28 . "(" cond ")" ";"

    "("  shift, and go to state 264


state 249

   95 stmt: T_FOR $@24 "(" T_id "," range . $@25 ")" stmt

    $default  reduce using rule 94 ($@25)

    $@25  go to state 265


state 250

  119 range: expr . range_choose expr
  120      | expr . range_choose expr "STEP" expr
  145 expr: expr . "+" expr
  146     | expr . "-" expr
  147     | expr . "*" expr
  148     | expr . "/" expr
  149     | expr . "%" expr
  150     | expr . "MOD" expr
  151 cond: expr . "==" expr
  152     | expr . "!=" expr
  153     | expr . "<" expr
  154     | expr . ">" expr
  155     | expr . "<=" expr
  156     | expr . ">=" expr
  167     | expr .

    "DOWNTO"  shift, and go to state 266
    "MOD"     shift, and go to state 129
    "TO"      shift, and go to state 267
    "=="      shift, and go to state 130
    ">"       shift, and go to state 131
    "<"       shift, and go to state 132
    "!="      shift, and go to state 133
    ">="      shift, and go to state 134
    "<="      shift, and go to state 135
    "+"       shift, and go to state 136
    "-"       shift, and go to state 137
    "*"       shift, and go to state 138
    "/"       shift, and go to state 139
    "%"       shift, and go to state 140

    "DOWNTO"  [reduce using rule 167 (cond)]
    "MOD"     [reduce using rule 167 (cond)]
    "TO"      [reduce using rule 167 (cond)]
    "=="      [reduce using rule 167 (cond)]
    ">"       [reduce using rule 167 (cond)]
    "<"       [reduce using rule 167 (cond)]
    "!="      [reduce using rule 167 (cond)]
    ">="      [reduce using rule 167 (cond)]
    "<="      [reduce using rule 167 (cond)]
    "+"       [reduce using rule 167 (cond)]
    "-"       [reduce using rule 167 (cond)]
    "*"       [reduce using rule 167 (cond)]
    "/"       [reduce using rule 167 (cond)]
    "%"       [reduce using rule 167 (cond)]
    $default  reduce using rule 167 (cond)

    range_choose  go to state 268


state 251

   86 stmt: "if" "(" cond ")" $@19 stmt .

    $default  reduce using rule 86 (stmt)


state 252

   89 stmt: "if" "(" cond ")" $@20 stmt . "else" $@21 stmt

    "else"  shift, and go to state 269


state 253

  101 stmt: "switch" "(" expr $@29 ")" "{" . switch_cases "}"

    $default  reduce using rule 110 (switch_cases)

    switch_cases  go to state 270


state 254

   92 stmt: T_while $@22 "(" cond ")" $@23 . stmt

    "break"      shift, and go to state 46
    "continue"   shift, and go to state 47
    T_do         shift, and go to state 48
    T_FOR        shift, and go to state 49
    "if"         shift, and go to state 50
    "return"     shift, and go to state 51
    "switch"     shift, and go to state 52
    T_while      shift, and go to state 53
    "WRITE"      shift, and go to state 54
    "WRITELN"    shift, and go to state 55
    "WRITESP"    shift, and go to state 56
    "WRITESPLN"  shift, and go to state 57
    T_id         shift, and go to state 58
    ";"          shift, and go to state 59
    "{"          shift, and go to state 35

    l_value  go to state 62
    call     go to state 63
    block    go to state 64
    stmt     go to state 271
    write    go to state 68


state 255

   56 l_value_list: "[" . expr "]" l_value_list

    "false"       shift, and go to state 73
    "not"         shift, and go to state 74
    "true"        shift, and go to state 75
    T_const_int   shift, and go to state 76
    T_const_real  shift, and go to state 77
    T_id          shift, and go to state 58
    T_const_char  shift, and go to state 78
    T_string      shift, and go to state 79
    "+"           shift, and go to state 80
    "-"           shift, and go to state 81
    "!"           shift, and go to state 82
    "("           shift, and go to state 83

    l_value  go to state 84
    call     go to state 85
    expr     go to state 272
    cond     go to state 87


state 256

   54 l_value: T_id $@11 "[" expr "]" l_value_list .

    $default  reduce using rule 54 (l_value)


state 257

   59 call: T_id $@12 "(" $@13 call_if ")" .

    $default  reduce using rule 59 (call)


state 258

   62 call_if: $@14 expr . $@15 call_if_list
  145 expr: expr . "+" expr
  146     | expr . "-" expr
  147     | expr . "*" expr
  148     | expr . "/" expr
  149     | expr . "%" expr
  150     | expr . "MOD" expr
  151 cond: expr . "==" expr
  152     | expr . "!=" expr
  153     | expr . "<" expr
  154     | expr . ">" expr
  155     | expr . "<=" expr
  156     | expr . ">=" expr
  167     | expr .

    "MOD"  shift, and go to state 129
    "=="   shift, and go to state 130
    ">"    shift, and go to state 131
    "<"    shift, and go to state 132
    "!="   shift, and go to state 133
    ">="   shift, and go to state 134
    "<="   shift, and go to state 135
    "+"    shift, and go to state 136
    "-"    shift, and go to state 137
    "*"    shift, and go to state 138
    "/"    shift, and go to state 139
    "%"    shift, and go to state 140

    "MOD"     [reduce using rule 167 (cond)]
    "=="      [reduce using rule 167 (cond)]
    ">"       [reduce using rule 167 (cond)]
    "<"       [reduce using rule 167 (cond)]
    "!="      [reduce using rule 167 (cond)]
    ">="      [reduce using rule 167 (cond)]
    "<="      [reduce using rule 167 (cond)]
    "+"       [reduce using rule 167 (cond)]
    "-"       [reduce using rule 167 (cond)]
    "*"       [reduce using rule 167 (cond)]
    "/"       [reduce using rule 167 (cond)]
    "%"       [reduce using rule 167 (cond)]
    ")"       reduce using rule 61 ($@15)
    ")"       [reduce using rule 167 (cond)]
    ","       reduce using rule 61 ($@15)
    ","       [reduce using rule 167 (cond)]
    $default  reduce using rule 167 (cond)

    $@15  go to state 273


state 259

  126 format: "FORM" "(" expr "," . expr "," expr ")"
  127       | "FORM" "(" expr "," . expr ")"

    "false"       shift, and go to state 73
    "not"         shift, and go to state 74
    "true"        shift, and go to state 75
    T_const_int   shift, and go to state 76
    T_const_real  shift, and go to state 77
    T_id          shift, and go to state 58
    T_const_char  shift, and go to state 78
    T_string      shift, and go to state 79
    "+"           shift, and go to state 80
    "-"           shift, and go to state 81
    "!"           shift, and go to state 82
    "("           shift, and go to state 83

    l_value  go to state 84
    call     go to state 85
    expr     go to state 274
    cond     go to state 87


state 260

  123 format_more: "," format format_more .

    $default  reduce using rule 123 (format_more)


state 261

  108 stmt: write "(" format format_more ")" ";" .

    $default  reduce using rule 108 (stmt)


state 262

   21 var_def_list: "," T_id "=" expr $@6 var_def_list .

    $default  reduce using rule 21 (var_def_list)


state 263

   10 const_def_list: "," T_id "=" const_expr const_def_list .

    $default  reduce using rule 10 (const_def_list)


state 264

   99 stmt: T_do $@26 stmt $@27 T_while $@28 "(" . cond ")" ";"

    "false"       shift, and go to state 73
    "not"         shift, and go to state 74
    "true"        shift, and go to state 75
    T_const_int   shift, and go to state 76
    T_const_real  shift, and go to state 77
    T_id          shift, and go to state 58
    T_const_char  shift, and go to state 78
    T_string      shift, and go to state 79
    "+"           shift, and go to state 80
    "-"           shift, and go to state 81
    "!"           shift, and go to state 82
    "("           shift, and go to state 83

    l_value  go to state 84
    call     go to state 85
    expr     go to state 123
    cond     go to state 275


state 265

   95 stmt: T_FOR $@24 "(" T_id "," range $@25 . ")" stmt

    ")"  shift, and go to state 276


state 266

  122 range_choose: "DOWNTO" .

    $default  reduce using rule 122 (range_choose)


state 267

  121 range_choose: "TO" .

    $default  reduce using rule 121 (range_choose)


state 268

  119 range: expr range_choose . expr
  120      | expr range_choose . expr "STEP" expr

    "false"       shift, and go to state 73
    "not"         shift, and go to state 74
    "true"        shift, and go to state 75
    T_const_int   shift, and go to state 76
    T_const_real  shift, and go to state 77
    T_id          shift, and go to state 58
    T_const_char  shift, and go to state 78
    T_string      shift, and go to state 79
    "+"           shift, and go to state 80
    "-"           shift, and go to state 81
    "!"           shift, and go to state 82
    "("           shift, and go to state 83

    l_value  go to state 84
    call     go to state 85
    expr     go to state 277
    cond     go to state 87


state 269

   89 stmt: "if" "(" cond ")" $@20 stmt "else" . $@21 stmt

    $default  reduce using rule 88 ($@21)

    $@21  go to state 278


state 270

  101 stmt: "switch" "(" expr $@29 ")" "{" switch_cases . "}"
  109 switch_cases: switch_cases . choose_case

    "case"     shift, and go to state 279
    "default"  shift, and go to state 280
    "}"        shift, and go to state 281

    choose_case  go to state 282


state 271

   92 stmt: T_while $@22 "(" cond ")" $@23 stmt .

    $default  reduce using rule 92 (stmt)


state 272

   56 l_value_list: "[" expr . "]" l_value_list
  145 expr: expr . "+" expr
  146     | expr . "-" expr
  147     | expr . "*" expr
  148     | expr . "/" expr
  149     | expr . "%" expr
  150     | expr . "MOD" expr
  151 cond: expr . "==" expr
  152     | expr . "!=" expr
  153     | expr . "<" expr
  154     | expr . ">" expr
  155     | expr . "<=" expr
  156     | expr . ">=" expr
  167     | expr .

    "MOD"  shift, and go to state 129
    "=="   shift, and go to state 130
    ">"    shift, and go to state 131
    "<"    shift, and go to state 132
    "!="   shift, and go to state 133
    ">="   shift, and go to state 134
    "<="   shift, and go to state 135
    "+"    shift, and go to state 136
    "-"    shift, and go to state 137
    "*"    shift, and go to state 138
    "/"    shift, and go to state 139
    "%"    shift, and go to state 140
    "]"    shift, and go to state 283

    "MOD"     [reduce using rule 167 (cond)]
    "=="      [reduce using rule 167 (cond)]
    ">"       [reduce using rule 167 (cond)]
    "<"       [reduce using rule 167 (cond)]
    "!="      [reduce using rule 167 (cond)]
    ">="      [reduce using rule 167 (cond)]
    "<="      [reduce using rule 167 (cond)]
    "+"       [reduce using rule 167 (cond)]
    "-"       [reduce using rule 167 (cond)]
    "*"       [reduce using rule 167 (cond)]
    "/"       [reduce using rule 167 (cond)]
    "%"       [reduce using rule 167 (cond)]
    "]"       [reduce using rule 167 (cond)]
    $default  reduce using rule 167 (cond)


state 273

   62 call_if: $@14 expr $@15 . call_if_list

    ","  shift, and go to state 284

    $default  reduce using rule 67 (call_if_list)

    call_if_list  go to state 285


state 274

  126 format: "FORM" "(" expr "," expr . "," expr ")"
  127       | "FORM" "(" expr "," expr . ")"
  145 expr: expr . "+" expr
  146     | expr . "-" expr
  147     | expr . "*" expr
  148     | expr . "/" expr
  149     | expr . "%" expr
  150     | expr . "MOD" expr
  151 cond: expr . "==" expr
  152     | expr . "!=" expr
  153     | expr . "<" expr
  154     | expr . ">" expr
  155     | expr . "<=" expr
  156     | expr . ">=" expr
  167     | expr .

    "MOD"  shift, and go to state 129
    "=="   shift, and go to state 130
    ">"    shift, and go to state 131
    "<"    shift, and go to state 132
    "!="   shift, and go to state 133
    ">="   shift, and go to state 134
    "<="   shift, and go to state 135
    "+"    shift, and go to state 136
    "-"    shift, and go to state 137
    "*"    shift, and go to state 138
    "/"    shift, and go to state 139
    "%"    shift, and go to state 140
    ")"    shift, and go to state 286
    ","    shift, and go to state 287

    "MOD"     [reduce using rule 167 (cond)]
    "=="      [reduce using rule 167 (cond)]
    ">"       [reduce using rule 167 (cond)]
    "<"       [reduce using rule 167 (cond)]
    "!="      [reduce using rule 167 (cond)]
    ">="      [reduce using rule 167 (cond)]
    "<="      [reduce using rule 167 (cond)]
    "+"       [reduce using rule 167 (cond)]
    "-"       [reduce using rule 167 (cond)]
    "*"       [reduce using rule 167 (cond)]
    "/"       [reduce using rule 167 (cond)]
    "%"       [reduce using rule 167 (cond)]
    ")"       [reduce using rule 167 (cond)]
    ","       [reduce using rule 167 (cond)]
    $default  reduce using rule 167 (cond)


state 275

   99 stmt: T_do $@26 stmt $@27 T_while $@28 "(" cond . ")" ";"
  160 cond: cond . "AND" $@33 cond
  162     | cond . "and" $@34 cond
  164     | cond . "OR" $@35 cond
  166     | cond . "or" $@36 cond
  168 expr: cond .

    "and"  shift, and go to state 142
    "or"   shift, and go to state 143
    "AND"  shift, and go to state 144
    "OR"   shift, and go to state 145
    ")"    shift, and go to state 288

    "and"     [reduce using rule 168 (expr)]
    "or"      [reduce using rule 168 (expr)]
    "AND"     [reduce using rule 168 (expr)]
    "OR"      [reduce using rule 168 (expr)]
    ")"       [reduce using rule 168 (expr)]
    $default  reduce using rule 168 (expr)


state 276

   95 stmt: T_FOR $@24 "(" T_id "," range $@25 ")" . stmt

    "break"      shift, and go to state 46
    "continue"   shift, and go to state 47
    T_do         shift, and go to state 48
    T_FOR        shift, and go to state 49
    "if"         shift, and go to state 50
    "return"     shift, and go to state 51
    "switch"     shift, and go to state 52
    T_while      shift, and go to state 53
    "WRITE"      shift, and go to state 54
    "WRITELN"    shift, and go to state 55
    "WRITESP"    shift, and go to state 56
    "WRITESPLN"  shift, and go to state 57
    T_id         shift, and go to state 58
    ";"          shift, and go to state 59
    "{"          shift, and go to state 35

    l_value  go to state 62
    call     go to state 63
    block    go to state 64
    stmt     go to state 289
    write    go to state 68


state 277

  119 range: expr range_choose expr .
  120      | expr range_choose expr . "STEP" expr
  145 expr: expr . "+" expr
  146     | expr . "-" expr
  147     | expr . "*" expr
  148     | expr . "/" expr
  149     | expr . "%" expr
  150     | expr . "MOD" expr
  151 cond: expr . "==" expr
  152     | expr . "!=" expr
  153     | expr . "<" expr
  154     | expr . ">" expr
  155     | expr . "<=" expr
  156     | expr . ">=" expr
  167     | expr .

    "MOD"   shift, and go to state 129
    "STEP"  shift, and go to state 290
    "=="    shift, and go to state 130
    ">"     shift, and go to state 131
    "<"     shift, and go to state 132
    "!="    shift, and go to state 133
    ">="    shift, and go to state 134
    "<="    shift, and go to state 135
    "+"     shift, and go to state 136
    "-"     shift, and go to state 137
    "*"     shift, and go to state 138
    "/"     shift, and go to state 139
    "%"     shift, and go to state 140

    "MOD"     [reduce using rule 167 (cond)]
    "STEP"    [reduce using rule 167 (cond)]
    "=="      [reduce using rule 167 (cond)]
    ">"       [reduce using rule 167 (cond)]
    "<"       [reduce using rule 167 (cond)]
    "!="      [reduce using rule 167 (cond)]
    ">="      [reduce using rule 167 (cond)]
    "<="      [reduce using rule 167 (cond)]
    "+"       [reduce using rule 167 (cond)]
    "-"       [reduce using rule 167 (cond)]
    "*"       [reduce using rule 167 (cond)]
    "/"       [reduce using rule 167 (cond)]
    "%"       [reduce using rule 167 (cond)]
    ")"       reduce using rule 119 (range)
    ")"       [reduce using rule 167 (cond)]
    $default  reduce using rule 167 (cond)


state 278

   89 stmt: "if" "(" cond ")" $@20 stmt "else" $@21 . stmt

    "break"      shift, and go to state 46
    "continue"   shift, and go to state 47
    T_do         shift, and go to state 48
    T_FOR        shift, and go to state 49
    "if"         shift, and go to state 50
    "return"     shift, and go to state 51
    "switch"     shift, and go to state 52
    T_while      shift, and go to state 53
    "WRITE"      shift, and go to state 54
    "WRITELN"    shift, and go to state 55
    "WRITESP"    shift, and go to state 56
    "WRITESPLN"  shift, and go to state 57
    T_id         shift, and go to state 58
    ";"          shift, and go to state 59
    "{"          shift, and go to state 35

    l_value  go to state 62
    call     go to state 63
    block    go to state 64
    stmt     go to state 291
    write    go to state 68


state 279

  112 choose_case: "case" . expr $@30 ":" statement_list "break" ";"
  114            | "case" . expr $@31 ":" statement_list "NEXT" ";"

    "false"       shift, and go to state 73
    "not"         shift, and go to state 74
    "true"        shift, and go to state 75
    T_const_int   shift, and go to state 76
    T_const_real  shift, and go to state 77
    T_id          shift, and go to state 58
    T_const_char  shift, and go to state 78
    T_string      shift, and go to state 79
    "+"           shift, and go to state 80
    "-"           shift, and go to state 81
    "!"           shift, and go to state 82
    "("           shift, and go to state 83

    l_value  go to state 84
    call     go to state 85
    expr     go to state 292
    cond     go to state 87


state 280

  115 choose_case: "default" . ":" statement_list "break" ";"
  116            | "default" . ":" statement_list "NEXT" ";"

    ":"  shift, and go to state 293


state 281

  101 stmt: "switch" "(" expr $@29 ")" "{" switch_cases "}" .

    $default  reduce using rule 101 (stmt)


state 282

  109 switch_cases: switch_cases choose_case .

    $default  reduce using rule 109 (switch_cases)


state 283

   56 l_value_list: "[" expr "]" . l_value_list

    "["  shift, and go to state 255

    $default  reduce using rule 55 (l_value_list)

    l_value_list  go to state 294


state 284

   66 call_if_list: "," . $@16 expr $@17 call_if_list

    $default  reduce using rule 64 ($@16)

    $@16  go to state 295


state 285

   62 call_if: $@14 expr $@15 call_if_list .

    $default  reduce using rule 62 (call_if)


state 286

  127 format: "FORM" "(" expr "," expr ")" .

    $default  reduce using rule 127 (format)


state 287

  126 format: "FORM" "(" expr "," expr "," . expr ")"

    "false"       shift, and go to state 73
    "not"         shift, and go to state 74
    "true"        shift, and go to state 75
    T_const_int   shift, and go to state 76
    T_const_real  shift, and go to state 77
    T_id          shift, and go to state 58
    T_const_char  shift, and go to state 78
    T_string      shift, and go to state 79
    "+"           shift, and go to state 80
    "-"           shift, and go to state 81
    "!"           shift, and go to state 82
    "("           shift, and go to state 83

    l_value  go to state 84
    call     go to state 85
    expr     go to state 296
    cond     go to state 87


state 288

   99 stmt: T_do $@26 stmt $@27 T_while $@28 "(" cond ")" . ";"

    ";"  shift, and go to state 297


state 289

   95 stmt: T_FOR $@24 "(" T_id "," range $@25 ")" stmt .

    $default  reduce using rule 95 (stmt)


state 290

  120 range: expr range_choose expr "STEP" . expr

    "false"       shift, and go to state 73
    "not"         shift, and go to state 74
    "true"        shift, and go to state 75
    T_const_int   shift, and go to state 76
    T_const_real  shift, and go to state 77
    T_id          shift, and go to state 58
    T_const_char  shift, and go to state 78
    T_string      shift, and go to state 79
    "+"           shift, and go to state 80
    "-"           shift, and go to state 81
    "!"           shift, and go to state 82
    "("           shift, and go to state 83

    l_value  go to state 84
    call     go to state 85
    expr     go to state 298
    cond     go to state 87


state 291

   89 stmt: "if" "(" cond ")" $@20 stmt "else" $@21 stmt .

    $default  reduce using rule 89 (stmt)


state 292

  112 choose_case: "case" expr . $@30 ":" statement_list "break" ";"
  114            | "case" expr . $@31 ":" statement_list "NEXT" ";"
  145 expr: expr . "+" expr
  146     | expr . "-" expr
  147     | expr . "*" expr
  148     | expr . "/" expr
  149     | expr . "%" expr
  150     | expr . "MOD" expr
  151 cond: expr . "==" expr
  152     | expr . "!=" expr
  153     | expr . "<" expr
  154     | expr . ">" expr
  155     | expr . "<=" expr
  156     | expr . ">=" expr
  167     | expr .

    "MOD"  shift, and go to state 129
    "=="   shift, and go to state 130
    ">"    shift, and go to state 131
    "<"    shift, and go to state 132
    "!="   shift, and go to state 133
    ">="   shift, and go to state 134
    "<="   shift, and go to state 135
    "+"    shift, and go to state 136
    "-"    shift, and go to state 137
    "*"    shift, and go to state 138
    "/"    shift, and go to state 139
    "%"    shift, and go to state 140

    "MOD"     [reduce using rule 167 (cond)]
    "=="      [reduce using rule 167 (cond)]
    ">"       [reduce using rule 167 (cond)]
    "<"       [reduce using rule 167 (cond)]
    "!="      [reduce using rule 167 (cond)]
    ">="      [reduce using rule 167 (cond)]
    "<="      [reduce using rule 167 (cond)]
    "+"       [reduce using rule 167 (cond)]
    "-"       [reduce using rule 167 (cond)]
    "*"       [reduce using rule 167 (cond)]
    "/"       [reduce using rule 167 (cond)]
    "%"       [reduce using rule 167 (cond)]
    ":"       reduce using rule 111 ($@30)
    ":"       [reduce using rule 113 ($@31)]
    ":"       [reduce using rule 167 (cond)]
    $default  reduce using rule 167 (cond)

    $@30  go to state 299
    $@31  go to state 300


state 293

  115 choose_case: "default" ":" . statement_list "break" ";"
  116            | "default" ":" . statement_list "NEXT" ";"

    $default  reduce using rule 118 (statement_list)

    statement_list  go to state 301


state 294

   56 l_value_list: "[" expr "]" l_value_list .

    $default  reduce using rule 56 (l_value_list)


state 295

   66 call_if_list: "," $@16 . expr $@17 call_if_list

    "false"       shift, and go to state 73
    "not"         shift, and go to state 74
    "true"        shift, and go to state 75
    T_const_int   shift, and go to state 76
    T_const_real  shift, and go to state 77
    T_id          shift, and go to state 58
    T_const_char  shift, and go to state 78
    T_string      shift, and go to state 79
    "+"           shift, and go to state 80
    "-"           shift, and go to state 81
    "!"           shift, and go to state 82
    "("           shift, and go to state 83

    l_value  go to state 84
    call     go to state 85
    expr     go to state 302
    cond     go to state 87


state 296

  126 format: "FORM" "(" expr "," expr "," expr . ")"
  145 expr: expr . "+" expr
  146     | expr . "-" expr
  147     | expr . "*" expr
  148     | expr . "/" expr
  149     | expr . "%" expr
  150     | expr . "MOD" expr
  151 cond: expr . "==" expr
  152     | expr . "!=" expr
  153     | expr . "<" expr
  154     | expr . ">" expr
  155     | expr . "<=" expr
  156     | expr . ">=" expr
  167     | expr .

    "MOD"  shift, and go to state 129
    "=="   shift, and go to state 130
    ">"    shift, and go to state 131
    "<"    shift, and go to state 132
    "!="   shift, and go to state 133
    ">="   shift, and go to state 134
    "<="   shift, and go to state 135
    "+"    shift, and go to state 136
    "-"    shift, and go to state 137
    "*"    shift, and go to state 138
    "/"    shift, and go to state 139
    "%"    shift, and go to state 140
    ")"    shift, and go to state 303

    "MOD"     [reduce using rule 167 (cond)]
    "=="      [reduce using rule 167 (cond)]
    ">"       [reduce using rule 167 (cond)]
    "<"       [reduce using rule 167 (cond)]
    "!="      [reduce using rule 167 (cond)]
    ">="      [reduce using rule 167 (cond)]
    "<="      [reduce using rule 167 (cond)]
    "+"       [reduce using rule 167 (cond)]
    "-"       [reduce using rule 167 (cond)]
    "*"       [reduce using rule 167 (cond)]
    "/"       [reduce using rule 167 (cond)]
    "%"       [reduce using rule 167 (cond)]
    ")"       [reduce using rule 167 (cond)]
    $default  reduce using rule 167 (cond)


state 297

   99 stmt: T_do $@26 stmt $@27 T_while $@28 "(" cond ")" ";" .

    $default  reduce using rule 99 (stmt)


state 298

  120 range: expr range_choose expr "STEP" expr .
  145 expr: expr . "+" expr
  146     | expr . "-" expr
  147     | expr . "*" expr
  148     | expr . "/" expr
  149     | expr . "%" expr
  150     | expr . "MOD" expr
  151 cond: expr . "==" expr
  152     | expr . "!=" expr
  153     | expr . "<" expr
  154     | expr . ">" expr
  155     | expr . "<=" expr
  156     | expr . ">=" expr
  167     | expr .

    "MOD"  shift, and go to state 129
    "=="   shift, and go to state 130
    ">"    shift, and go to state 131
    "<"    shift, and go to state 132
    "!="   shift, and go to state 133
    ">="   shift, and go to state 134
    "<="   shift, and go to state 135
    "+"    shift, and go to state 136
    "-"    shift, and go to state 137
    "*"    shift, and go to state 138
    "/"    shift, and go to state 139
    "%"    shift, and go to state 140

    "MOD"     [reduce using rule 167 (cond)]
    "=="      [reduce using rule 167 (cond)]
    ">"       [reduce using rule 167 (cond)]
    "<"       [reduce using rule 167 (cond)]
    "!="      [reduce using rule 167 (cond)]
    ">="      [reduce using rule 167 (cond)]
    "<="      [reduce using rule 167 (cond)]
    "+"       [reduce using rule 167 (cond)]
    "-"       [reduce using rule 167 (cond)]
    "*"       [reduce using rule 167 (cond)]
    "/"       [reduce using rule 167 (cond)]
    "%"       [reduce using rule 167 (cond)]
    ")"       reduce using rule 120 (range)
    ")"       [reduce using rule 167 (cond)]
    $default  reduce using rule 167 (cond)


state 299

  112 choose_case: "case" expr $@30 . ":" statement_list "break" ";"

    ":"  shift, and go to state 304


state 300

  114 choose_case: "case" expr $@31 . ":" statement_list "NEXT" ";"

    ":"  shift, and go to state 305


state 301

  115 choose_case: "default" ":" statement_list . "break" ";"
  116            | "default" ":" statement_list . "NEXT" ";"
  117 statement_list: statement_list . stmt

    "break"      shift, and go to state 306
    "continue"   shift, and go to state 47
    T_do         shift, and go to state 48
    T_FOR        shift, and go to state 49
    "if"         shift, and go to state 50
    "NEXT"       shift, and go to state 307
    "return"     shift, and go to state 51
    "switch"     shift, and go to state 52
    T_while      shift, and go to state 53
    "WRITE"      shift, and go to state 54
    "WRITELN"    shift, and go to state 55
    "WRITESP"    shift, and go to state 56
    "WRITESPLN"  shift, and go to state 57
    T_id         shift, and go to state 58
    ";"          shift, and go to state 59
    "{"          shift, and go to state 35

    l_value  go to state 62
    call     go to state 63
    block    go to state 64
    stmt     go to state 308
    write    go to state 68


state 302

   66 call_if_list: "," $@16 expr . $@17 call_if_list
  145 expr: expr . "+" expr
  146     | expr . "-" expr
  147     | expr . "*" expr
  148     | expr . "/" expr
  149     | expr . "%" expr
  150     | expr . "MOD" expr
  151 cond: expr . "==" expr
  152     | expr . "!=" expr
  153     | expr . "<" expr
  154     | expr . ">" expr
  155     | expr . "<=" expr
  156     | expr . ">=" expr
  167     | expr .

    "MOD"  shift, and go to state 129
    "=="   shift, and go to state 130
    ">"    shift, and go to state 131
    "<"    shift, and go to state 132
    "!="   shift, and go to state 133
    ">="   shift, and go to state 134
    "<="   shift, and go to state 135
    "+"    shift, and go to state 136
    "-"    shift, and go to state 137
    "*"    shift, and go to state 138
    "/"    shift, and go to state 139
    "%"    shift, and go to state 140

    "MOD"     [reduce using rule 167 (cond)]
    "=="      [reduce using rule 167 (cond)]
    ">"       [reduce using rule 167 (cond)]
    "<"       [reduce using rule 167 (cond)]
    "!="      [reduce using rule 167 (cond)]
    ">="      [reduce using rule 167 (cond)]
    "<="      [reduce using rule 167 (cond)]
    "+"       [reduce using rule 167 (cond)]
    "-"       [reduce using rule 167 (cond)]
    "*"       [reduce using rule 167 (cond)]
    "/"       [reduce using rule 167 (cond)]
    "%"       [reduce using rule 167 (cond)]
    ")"       reduce using rule 65 ($@17)
    ")"       [reduce using rule 167 (cond)]
    ","       reduce using rule 65 ($@17)
    ","       [reduce using rule 167 (cond)]
    $default  reduce using rule 167 (cond)

    $@17  go to state 309


state 303

  126 format: "FORM" "(" expr "," expr "," expr ")" .

    $default  reduce using rule 126 (format)


state 304

  112 choose_case: "case" expr $@30 ":" . statement_list "break" ";"

    $default  reduce using rule 118 (statement_list)

    statement_list  go to state 310


state 305

  114 choose_case: "case" expr $@31 ":" . statement_list "NEXT" ";"

    $default  reduce using rule 118 (statement_list)

    statement_list  go to state 311


state 306

  102 stmt: "break" . ";"
  115 choose_case: "default" ":" statement_list "break" . ";"

    ";"  shift, and go to state 312


state 307

  116 choose_case: "default" ":" statement_list "NEXT" . ";"

    ";"  shift, and go to state 313


state 308

  117 statement_list: statement_list stmt .

    $default  reduce using rule 117 (statement_list)


state 309

   66 call_if_list: "," $@16 expr $@17 . call_if_list

    ","  shift, and go to state 284

    $default  reduce using rule 67 (call_if_list)

    call_if_list  go to state 314


state 310

  112 choose_case: "case" expr $@30 ":" statement_list . "break" ";"
  117 statement_list: statement_list . stmt

    "break"      shift, and go to state 315
    "continue"   shift, and go to state 47
    T_do         shift, and go to state 48
    T_FOR        shift, and go to state 49
    "if"         shift, and go to state 50
    "return"     shift, and go to state 51
    "switch"     shift, and go to state 52
    T_while      shift, and go to state 53
    "WRITE"      shift, and go to state 54
    "WRITELN"    shift, and go to state 55
    "WRITESP"    shift, and go to state 56
    "WRITESPLN"  shift, and go to state 57
    T_id         shift, and go to state 58
    ";"          shift, and go to state 59
    "{"          shift, and go to state 35

    l_value  go to state 62
    call     go to state 63
    block    go to state 64
    stmt     go to state 308
    write    go to state 68


state 311

  114 choose_case: "case" expr $@31 ":" statement_list . "NEXT" ";"
  117 statement_list: statement_list . stmt

    "break"      shift, and go to state 46
    "continue"   shift, and go to state 47
    T_do         shift, and go to state 48
    T_FOR        shift, and go to state 49
    "if"         shift, and go to state 50
    "NEXT"       shift, and go to state 316
    "return"     shift, and go to state 51
    "switch"     shift, and go to state 52
    T_while      shift, and go to state 53
    "WRITE"      shift, and go to state 54
    "WRITELN"    shift, and go to state 55
    "WRITESP"    shift, and go to state 56
    "WRITESPLN"  shift, and go to state 57
    T_id         shift, and go to state 58
    ";"          shift, and go to state 59
    "{"          shift, and go to state 35

    l_value  go to state 62
    call     go to state 63
    block    go to state 64
    stmt     go to state 308
    write    go to state 68


state 312

  102 stmt: "break" ";" .
  115 choose_case: "default" ":" statement_list "break" ";" .

    "case"     reduce using rule 115 (choose_case)
    "default"  reduce using rule 115 (choose_case)
    "}"        reduce using rule 115 (choose_case)
    $default   reduce using rule 102 (stmt)


state 313

  116 choose_case: "default" ":" statement_list "NEXT" ";" .

    $default  reduce using rule 116 (choose_case)


state 314

   66 call_if_list: "," $@16 expr $@17 call_if_list .

    $default  reduce using rule 66 (call_if_list)


state 315

  102 stmt: "break" . ";"
  112 choose_case: "case" expr $@30 ":" statement_list "break" . ";"

    ";"  shift, and go to state 317


state 316

  114 choose_case: "case" expr $@31 ":" statement_list "NEXT" . ";"

    ";"  shift, and go to state 318


state 317

  102 stmt: "break" ";" .
  112 choose_case: "case" expr $@30 ":" statement_list "break" ";" .

    "case"     reduce using rule 112 (choose_case)
    "default"  reduce using rule 112 (choose_case)
    "}"        reduce using rule 112 (choose_case)
    $default   reduce using rule 102 (stmt)


state 318

  114 choose_case: "case" expr $@31 ":" statement_list "NEXT" ";" .

    $default  reduce using rule 114 (choose_case)
